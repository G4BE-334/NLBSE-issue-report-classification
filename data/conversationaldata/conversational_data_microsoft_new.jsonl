{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nprivate repo cannot give access to application repro steps 1 run application how often does this bug happen every time devtools package automated devtools version automated 4280035a41c4e error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at bridgeemit at at listener error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug devtools extension build failing in windows and ubuntu\nna repro steps been working on react devtools extension for a while now my mac got some issue so i switched to a windows machine but currently i am unable to build the react devtool extension and run it locally here is the napshot of the error windows powershell 7282023 104305 how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug deprecated\nrepro steps hi i have heard that the new versions of react will not support the if there any information about this update that you can share is there a new way to achieve the same result of using the but with a different method what is the future of react without the reactime and react inspector in the chrome store use this hook how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 0 because no matching node was found in the store\nlocal repro steps open reactdevtools how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 42782468a8735 error message automated cannot remove node 0 because no matching node was found in the store error call stack automated text at at femit at at at arrayforeach anonymous at lheonmessage at at at aemit nodeevents51328 at eexportsf at eexportsemit nodeevents51328 error component stack automated no response github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 103 because no matching node was found in the store\nlocalhost repro steps how often does this bug happen every time devtools package automated devtools version automated 42782468a8735 error message automated cannot remove node 103 because no matching node was found in the store error call stack automated text error component stack automated no response github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug app not recognized in firefox but works in chrome\nrepro steps on both firefox 103 and 104 the react devtools extension says this page doesnt appear to be using react on the most recent version of chrome its working just fine i cannot share the project since its a private project unfortunately but i suspect this is a regression introduced with the recent especially since the devtools were working perfectly fine until maybe one or two weeks ago it does work in incognito mode in firefox how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug using different react instances across multiple frames throws errors\nrepro steps 1 visit the codepen linked above 2 be sure to open the debug view so codepen doesnt add any additional iframes more 3 observe warning in the console tab invalid renderer id 1 error in the components tab uncaught error cannot add node 3 because a node with that id is already in the store after dismissing the error all components seem to be accounted for you might need to adjust the hide components where option in my actual application the error pops up for every change in the tree making the devtools virtually unusable note this only seems to happen if the iframe is added some time after the initial react tree was mounted in the parent window when i remove the settimeout so the iframe is added synchronously i no longer see any warnings related issues how often does this bug happen every time devtools package automated no response devtools version automated manual 4277 572023 in google chrome version 11205615165 official build 64bit error message automated manual cannot add node 3 because a node with that id is already in the store error call stack automated manual at at bridgebridgeemit at at listener error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 226752 because no matching node was found in the store\nrepro steps how often does this bug happen every time devtools package automated devtools version automated 42767f8c501f6 error message automated cannot remove node 226752 because no matching node was found in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 197 because no matching node was found in the store\nhttplocalhost3000 repro steps 1 accessing react dev from a local app how often does this bug happen sometimes devtools package automated devtools version automated 42767f8c501f6 error message automated cannot remove node 197 because no matching node was found in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug unable to build the extension locally\nna repro steps i am trying to build the chrome extension for react dev tools locally to test changes as i am looking forward to fix this issue but there seem to be some error with the packages looking forward to get some help windows powershell 4252023 94403 how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug can not build react devtools for local development instructions lead to error\nrepro steps follow the instructions here to build local version of react devtools extension git clone cd react yarn install yarn buildfordevtools stuck on this step everytime yarn buildfordevtools throw afunction error signedsourcesignfile cannot sign file without token at objectanonymous at modulecompile at at moduleload at functionmoduleload at modulerequire at require at objectanonymous at modulecompile at is there anything else i need to set up in order to make this work how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug could not find node with id 364 in commit tree\nprivate repro steps private how often does this bug happen every time devtools package automated devtools version automated 427328ce1c171 error message automated could not find node with id 364 in commit tree error call stack automated text at at mapforeach anonymous at at at at mf at qk at mk at lk at sj error component stack automated text at at div at div at div at at profilerprofiler at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not find node with id in commit tree intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug copy operations dont work in chrome\nhttpsreactdev repro steps 1 go to components tab 2 for any component try to copy the value in props hooks etc to clipboard how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug\nlocalhost repro steps in react routers latest version inside the loader or action function one is not able to use reduxjs functions like how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug component is not a function when using suspense and forwardref\nreact version steps to reproduce i havent been able to create a minimal example yet if needed i will spend more time on it however it only seems to occur when suspending components rerender in a specific order description the component is not a function error is thrown when using suspense and forwardref together in a specific way it seems like reactreconciler doesnt properly handle forwardrefs in either renderwithhooksagain or the component variable is not a function in this case but a typeof render props ref any renderwithhooksagain tries to execute componentprops secondarg which throws this error im not too familiar with react internals if you can tell me how to trigger this codepath i can make a minimal reproduction more easily img width1303 altscreenshot 20230314 at 14 55 13"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug nested usetransition makes ispending of outer one always false\nnested starttransition call takes over and makes parent starttransition unable to track ispending seb says its a bug repro 1 click the button 2 ispending in indexpagejs is true however ispending in appjs is false expected ispending in appjs is also true"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 792 because a node with that id is already in the store\nrepro steps log in to chatgpt how often does this bug happen often devtools package automated devtools version automated 427147f63dc54 error message automated cannot add node 792 because a node with that id is already in the store error call stack automated text error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbugnext legacy reactdomrender crashes when rendering into document container\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed react version steps to reproduce 1 reactdomrender into a document container your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react issues without reproduction steps or code examples may be immediately closed as not actionable link to code example the current behavior throws with react expected an html element to exist in the document but one was not found react never removes the documentelement for any document it renders into so the cause is likely in some other script running on this page reactdomrender clears the container before rendering into it but with the new hostsingletons we expect an existing documentelement the odd part is that it seems like affected the next release even though enablehostsingletons is disabled for that release cc gnoff the expected behavior no crash like in reactdom1820"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug usesyncexternalstore will cause hydration missmatch in strictmode if serversnapshot is different from snapshot\nreact version react version problem in strictmode when using hydrateroot to render a component that using usesyncexternalstore it seems that useses will do hydration twice but in second hydration process useses does not use the result of getserversnapshot as initial state which will cause hydration error this problem will only happen in development mode reproduce link to code example it works well in react 182"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug can not work on devtools instructions lead to error\nrepro steps because react requires java not on macos but assumes brew installed brew update brew install java sudo ln sfn export zshrc export zshrc export because react requires node before v17 but assuming you have nvm installed nvm install 16 then the real stuff directions inside folders like chrome are quite wrong git clone cd react yarn install yarn buildfordevtools cd yarn buildchrome yarn buildchromelocal yarn run testchrome now inside devtools uncaught evalerror refused to evaluate a string as javascript because unsafeeval is not an allowed source of script in the following content security policy directive scriptsrc self wasmunsafeeval at at webpackrequire at at what exactly are you doing that works in order to build test and develop this extension how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nerror typeerror cannot read property createelement of undefined js engine hermes\napp using flipper dor react devtools repro steps migrate to current version of rn0711 using flipper enable hermes engine run the app how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated error typeerror cannot read property createelement of undefined js engine hermes error call stack automated text error typeerror cannot read property createelement of undefined js engine hermes this is related to path function initialize canvas canvasstylecsstext n xxbackgroundcolor redn xxopacity 05n bottom 0n left 0n pointerevents nonen position fixedn right 0n top 0n zindex 1000000000n var root rootfirstchild error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 0 because no matching node was found in the store\napp repro steps 1reactnative run android 2reactdevtools 3adb reverse tcp8097 tcp8097 4open dev tools on phone 5error how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 427147f63dc54 error message automated cannot remove node 0 because no matching node was found in the store error call stack automated text at at femit at at at arrayforeach anonymous at aeonmessage at at at aemit eventsjs31520 at eexportsl at eexportsemit eventsjs31520 error component stack automated no response github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug the extension brokes some javascripts react is not used\nrepro steps with the code in the sandbox but in a real page when the extension is enabled the tree is expanded and cannot be collapsed anymore there are no errors in the console of the page but many in the extension i dont know if its correlated note this code is provided by symfony a popular php framework so many developer faces this issue note 2 this issue is quite new i also created an issue in how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug element 1307 not found\nno source code available publically repro steps working on my local react project how often does this bug happen every time devtools package automated devtools version automated 427147f63dc54 error message automated element 1307 not found error call stack automated text at error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\npersonal repro steps go on a react app open panel observe error how often does this bug happen every time devtools package automated devtools version automated 427147f63dc54 error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug use causes nested suspense boundaries to not reveal\nnested suspense boundaries should reveal as the content becomes ready however this doesnt seem to work with use repro case expected suspense boundaries reveal separately actual it waits for everything before revealing anything"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug element 51 not found\nlocal app repro steps working on the browser presentation api not really sure what i did to make this happen how often does this bug happen every time devtools package automated devtools version automated 4270bd2ad89a4 error message automated element 51 not found error call stack automated text at error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug element 744 not found\nrepro steps occurred during mui datagrid setup how often does this bug happen every time devtools package automated devtools version automated 4270bd2ad89a4 error message automated element 744 not found error call stack automated text at error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 0 because no matching node was found in the store\nrepro steps devtools bug cannot remove node 0 because no matching node was found in the store how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 426144e2ca393 error message automated cannot remove node 0 because no matching node was found in the store error call stack automated text at at femit at at at arrayforeach anonymous at aeonmessage at at at aemit eventsjs31520 at eexportsl at eexportsemit eventsjs31520 error component stack automated no response github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug element 12 not found\nchrome repro steps went to check react component dev tools for state values and got error how often does this bug happen every time devtools package automated devtools version automated 4270bd2ad89a4 error message automated element 12 not found error call stack automated text at error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug element 3 not found\nrepro steps as soon as the app component is rendered as soon as the application is loaded i get the element 3 error above which stays consistent throughout every state change in my application start quizdata score isscored but i am not getting any console errors and the app is working as expected but i have no access to my react components or any visibility of the state changes occurring within the app how often does this bug happen every time devtools package automated devtools version automated 4270bd2ad89a4 error message automated element 3 not found error call stack automated text at error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug element 9 not found also element 10 not found element 12 not found\nrepro steps on first load i get multiple error warnings on all app components from game down they are identified with different element numbers but appear to be directed to the same issue the error was thrown at if you select begin game in app the error in component game can be dismissed but new errors appear on all newly rendered components below once again all have different element numbers directed to the same location mainjs3955815 this is issue is probably related to devtools bug element 41 not chrome is up to date version 1080535971 official build x8664 and restarted i also tried reinstalling react extension running 4270 the app is using redux which one commenter in other thread mentioned might be a commonality how often does this bug happen every time devtools package automated devtools version automated 4270bd2ad89a4 error message automated element 9 not found error call stack automated text at error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug element 20 not found\nwebsite repro steps added a useeffect to a functional component how often does this bug happen sometimes devtools package automated devtools version automated 4270bd2ad89a4 error message automated element 20 not found error call stack automated text at error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug element 41 not found\nrepro steps in branch litmustools featurelit5 i just run the app and it throws this error how often does this bug happen every time devtools package automated devtools version automated 4270bd2ad89a4 error message automated element 41 not found error call stack automated text at error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 47 because a node with that id is already in the store\nprivate repro steps when we have multiple react application in the same page how often does this bug happen often devtools package automated devtools version automated 4250336ac8ceb error message automated cannot add node 47 because a node with that id is already in the store error call stack automated text error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nlocal personal app repro steps i was using global context how often does this bug happen every time devtools package automated devtools version automated 4250336ac8ceb error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug reactdevtools standalone launching and quitting after 2 seconds with no errors on ubuntu 2204\nhttpswwwfacebookcom repro steps run reactdevtools in the terminal an empty window appears for maybe 2 seconds and then disappears the terminal doesnt show any messages whatsoever there is another issue here regarding reactdevtools failing silently on debian where the submitter alleged that it was related to insufficient permissions to run electron not sure if thats related to this issue but i can run electron just fine its just reactdevtools that are failing os is ubuntu 2204 kubuntu node is v16160 reactdevtools 4250 updated to add url how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot read properties of undefined reading iscollapsed\nrepro steps 3 how often does this bug happen sometimes devtools package automated devtools version automated 4250336ac8ceb error message automated cannot read properties of undefined reading iscollapsed error call stack automated text at at at at listrender at uj at sj at gl at fl at el at tl error component stack automated text at list at div at autosizer at div at div at treetree at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text read properties of undefined reading iscollapsed intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug usereducer bailout w useeffect suspense causes infinite loop strictmode error with nextexperimental builds\ni just found our lib doesnt pass tests with latest build unreleased ones react version steps to reproduce jsx const component const count dispatch usereducerprev prev 0 useeffect dispatch return count const app suspense component suspense maximum update depth exceeded this can happen when a component repeatedly calls setstate inside componentwillupdate or componentdidupdate react limits the number of nested updates to prevent infinite loops link to code example the current behavior warning in strictmode the expected behavior no warning in strictmode 25049 seems related im not sure if its a bug or a misusage"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nwebsite repro steps refresh page how often does this bug happen sometimes devtools package automated devtools version automated 4250336ac8ceb error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nreact developer tools repro steps open components in web developer tools how often does this bug happen only once devtools package automated devtools version automated 4250336ac8ceb error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug hook parsing failed components tab\nrepro steps click components tab click on component click parse hook names how often does this bug happen every time devtools package automated no response devtools version automated 4250 error message automated hook parsing failed error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 20025 because no matching node was found in the store\nhttpsdevthreemadcom repro steps on inspecting comment modal how often does this bug happen every time devtools package automated devtools version automated 4250336ac8ceb error message automated cannot remove node 20025 because no matching node was found in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated text comment github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 1390 because no matching node was found in the store\nrepro steps 1 create account 2 redirect to verify email page 3 copy otp from email 4 paste it in email page 5 redirect login 6 keep redirecting between login page and verify email page how often does this bug happen every time devtools package automated devtools version automated 42477f673317f error message automated cannot remove node 1390 because no matching node was found in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\npossible suspense bug\ni think ive trapped a bug where– after react suspends and the data has resolved react bails out before rerendered some of the suspended components its possible the bug is in my suspense cache logic i realize im working with unfinalized apis here is a loom walk through of the code in question here is a replay recording of the bug with annotations from myself and andarist to reproduce the bug directly 1 checkout replay commit 1 in the main directory run yarn install 1 in run yarn dev 1 open and scroll down until you see loading below the entry containing cc acdlite who seemed interested in looking into this sometime obviously no hurry"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 0 because no matching node was found in the store\nreact native app repro steps 1 run react native app 2 npx reactdevtools 3 adb reverse tcp8097 tcp8097 4 reload the app this error should come as mentioned below how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 42477f673317f error message automated cannot remove node 0 because no matching node was found in the store error call stack automated text at at femit at at at arrayforeach anonymous at aeonmessage at at at aemit eventsjs31520 at eexportsl at eexportsemit eventsjs31520 error component stack automated no response github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug selectingdeselecting boolean from devtools component props causing loss of class functions\nrepro steps 1 install webpack react babel with npm install in terminal 2 bundle app with webpack via webpack watch modedevelopement in terminal 3 open up indexhtml in chrome and open react devtools under components there should be a dog component within a person component where the person is passed as a prop to the dog 4 under dog props there should be a person object with a value of present being true if you click the button the value of present should change to false the number should switch to 0 and the checkbox should get deselected however if you manually select the checkbox to change between truefalse the prop seems to lose its prototype references to the original js class as an error stating it cannot find the function will be shown how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot remove node 1168 because no matching node was found in the store\n1 repro steps 1 how often does this bug happen often devtools package automated devtools version automated 42477f673317f error message automated cannot remove node 1168 because no matching node was found in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated text 1 github query string automated text remove node because no matching node was found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug component tree panel becomes unresponsive after clicking on a few components\nmultiple but you can check at repro steps 1 access a website in chrome that uses react 2 open chrome developer tools 3 open the react developer tools components tabpanel 4 click on 5 10 components in the component tree individually to inspect them notes this started happening on all reactbased websites after updating to chrome version 1020500561 on my work macbook x8664 and my personal macbook arm64 reverting back to chrome 100 seems to help i had a coworker test as well with the same result you can still select individual components using the picker even after the panel locks up the lockup seems to happen quicker when expand component tree by default is selected in the components tab in the panel settings but will still lock up if you manually expand enough components how often does this bug happen every time devtools package automated devtools version automated 4246 5122022 error message automated none error call stack automated na error component stack automated na github query string automated na"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug reload and profile aways disabled on timeline tab\nbetareactjsorg local development repro steps 1 2 yarn dev reload and profile is enabled for flamegraph img width724 altscreenshot 20220523 at 21 28 07 but disabled for timeline img width671 altscreenshot 20220523 at 21 28 12 and yet i can reload and profile in flamegraph then switch to timeline and it works so this doesnt add up how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nexpo repro steps all you have to do is use expo init or npx createreactnativeapp and make a fresh app with a blank template when i open it with expo start or npm start i get this message every time in the debugger when i press the dismiss button i get a box that says unsupported devtools backend version you are running reactdevtools version 4140d0ec283819 this requires bridge protocol version 1 however the current backend version uses bridge protocol version 2 to fix this upgrade the devtools npm package npm i g reactdevtools4220 i follow all the steps i can find to solve the issue including yarn resolutions updating nodejs and packages etc but nothing works at all i cannot initialize new apps without getting the error i really want this debugger to work again how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 4140d0ec283819 error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at cemit at at at arrayforeach anonymous at sgceonmessage at sn at semit eventsjs31520 at eexportsp at eexportsemit eventsjs31520 at eexportsdatamessage at eexportsgetdata at eexportsstartloop at eexportswrite at dowrite at writeorbuffer streamwritablejs3875 error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug consolelog crashes the app\nlocal development repro steps in order to reproduce it type consolelogany variable or functionality if using console log for printing string it works with not errors how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug when inspecting with devtools it fails to select correct react component when there are multiple reactdom instances in the application\nrepro steps when using devtools in the linked codesandbox i am not able to select react components that are rendered by the microfe using the inspect tool steps to reproduce 1 go to httpsjtiw8mcsbapp 2 open react devtools and click on inspect icon with the select an element on the page to inspect it tooltip 3 inspect the component with the pink background and text microfe example heading 4 devtools selects app as the component or if the component type filter is disabled it selects the div where the microfe is mounted ideally it would actually select either the microferoot component or the corresponding html node if the filter is disabled i was able to get it working by doing the following in the how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug i believe that ui and ux from react devtools is a big bug\nrepro steps hello community victoryhand i have an big question about the react devtools why is so different in comparasion with vue devtools all is more hard see the context indentify the states the components unamusedface in comparasion with vue devtools the react devtoosl dont have a pretty and functional ui and ux the contexts states and components dont have a ui ogarnized to easy indentification on vue devtools there tabs to components store contexts events and some other features see below the vuex contexts in react environment timeline of events how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug treecontext error cant access property id in undefined\nhttpsappreplayio repro steps unfortunately i dont know how to reproduce this bug it was just logged to sentry it seems like theres a logic bug here though if selectedelementindex is null or is empty then flatindex would be 0 still– and this statement would result in an undefined entry js preventry 1 how often does this bug happen only once devtools package automated reactdevtoolsinline devtools version automated 4244 error message automated error cant access property id n is undefined error call stack automated text react errorboundary error cant access property id n is undefined at at at at at at at at at error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug forwardref components not marked as rendered if context changed\nrepro steps 1 goto httpslpdk4tcsbapp 1 start profiling 3 enter a into the input 4 stop profiling how often does this bug happen every time devtools package automated no response devtools version automated 424346a98cff2 error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug error in event handler error attempting to use a disconnected port object\nrepro steps 1 create a react app yarn create reactapp testreact cd testreact yarn start 2 create envdevelopment file in root httpstrue port4100 browsernone 3 visit httpslocalhost4100 in chrome v10004896127 4 open react devtools by inspecting page some times it shows components tab but in large application it does not show the components tab if it shows the tab the error message is sent to dev tools every second 5 see error message in 6 this is not reproducible in firefox v9901 how often does this bug happen every time devtools package automated no response devtools version automated 4243 3302022 error message automated error in event handler error attempting to use a disconnected port object error call stack automated buildbackgroundjs139 lone functionmodules webpackbootstrap the module cache var installedmodules the require function function check if module is in cache return create a new module and put it into the cache var module i moduleid l false exports execute the module function module moduleexports webpackrequire flag the module as loaded modulel true return the exports of the module return moduleexports expose the modules object webpackmodules webpackrequirem modules expose the module cache webpackrequirec installedmodules define getter function for harmony exports webpackrequired functionexports name getter name name enumerable true get getter define esmodule on exports webpackrequirer functionexports iftypeof symbol undefined symboltostringtag symboltostringtag value module esmodule value true create a fake namespace object mode 1 value is a module id require it mode 2 merge all properties of value into the ns mode 4 return value when already ns object mode 81 behave like require webpackrequiret functionvalue mode ifmode 1 value webpackrequirevalue ifmode 8 return value ifmode 4 typeof value object value valueesmodule return value var ns objectcreatenull webpackrequirerns default enumerable true value value ifmode 2 typeof value string forvar key in value webpackrequiredns key functionkey return valuekey bindnull key return ns getdefaultexport function for compatibility with nonharmony modules webpackrequiren functionmodule var getter module moduleesmodule function getdefault return moduledefault function getmoduleexports return module a getter return getter webpackrequireo functionobject property return property webpackpublicpath webpackrequirep build load entry module and return exports return 115 115 functionmodule exports webpackrequire use strict global chrome const ports const isfirefox 0 port let tab null let name null if isnumericportname tab portname name devtools else tab portsendertabid name contentscript if portstab portstab devtools null contentscript null portstabname port if portstabdevtools function isnumericstr return str str function file buildcontentscriptjs function function doublepipeone two function lonemessage function ltwomessage function shutdown onedisconnect twodisconnect function tabid tabid tabid path 16 icons16 reactbuildtype png 32 icons32 reactbuildtype png 48 icons48 reactbuildtype png 128 icons128 reactbuildtype png tabid tabid popup popups reactbuildtype html function return url new urlurlprotocol chrome function if tab tabid update popup page of any existing open tabs if they are restricted browser pages we cant update for any other types proddevoutdated etc as the content script needs to be injected at documentstart itself for those kinds of detection todo show a different popup pageto reload current page probably for old tabs opened before the extension is installed if isfirefox chrometabsquery tabs changeinfo tab listen to url changes on the active tab and update the devtools icon changeinfo tab if isfirefox we dont properly detect protected urls in firefox at the moment however we can reset the devtools icon to its loading state when the url changes it will be updated to the correct icon by the onmessage callback below if tabactive changeinfostatus loading tabid else dont reset the icon to the loading state for chrome or edge the onupdated callback fires more frequently for these browsers often after onmessage has been called sender var requestpayload portsid const tab sendertab if tab const id tabid this is sent from the hook content script it tells us a renderer has attached if we use browseraction instead of pageaction because this lets us display a custom default popup when react is not detected it is specified in the manifest id else switch requestpayload requestpayload null requestpayload void 0 void 0 requestpayloadtype case case forward the result of fetchinpage requests back to the extension const devtools portsid portsid null portsid void 0 void 0 portsiddevtools if devtools break error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add child foo to parent bar because parent node was not found in the store\nrepro steps steps to reproduce 1 install all dependencies 2 run the project with npm start 3 navigate to 4 enter any number into phone number and click on get otp 5 enter any number into the text boxes and click on sign in 6 allow access to location 7 check the dev tools for the error how often does this bug happen every time devtools package automated devtools version automated 424346a98cff2 error message automated cannot add child 986 to parent 985 because parent node was not found in the store error call stack automated text error component stack automated no response github query string automated text add child to parent because parent node was not found in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nconsole dimming on second strictmode render forces string cast\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed react version 1800 congrats on the release smilingface steps to reproduce 1 during rendering of a component log something that doesnt naturally cast to a string eg consolelognew set 2 wrap the tree in strictmode 3 observe the console link to code example note that the console dimming isnt applied to the inline codesandbox dev tools so to see the issue you need to visit the fullscreen view here httpswyeud7csbapp the current behavior in chrome img width479 altscreen shot 20220407 at 4 19 09 pm as expected there are two console logs one dimmed unfortunately the way that the dimming works forces the second log to be serialized to a string this has two issues 1 it can result in two of the same logs looking very different from each other which is confusing to developers for example in the screenshot above its pretty surprising that those two console lines occur from the same consolelog call 2 it prevents browser dev tools introspection this can make it inconvenient or impossible to compare the two values if the string cast doesnt include the value as in the screenshot above this is problematic because a key use case of printing both values is to check whether theyre the same you can kind of work around the second issue by writing your own string cast at the log callsite but you lose the dx of introspection which is pretty unfortunate especially in the case of largedeeplynested objects etc easier to compare two native console values than two jsonstringify dumps the expected behavior while there is a new appreciated dev tools option to suppress logging for the second render entirely there is no way to disable the dimming feature any of the following options would solve the issue 1 provide a dev tools option to disable dimming 2 remove the dimming feature entirely so that both logs are always printed the same way 3 update the dimming implementation so that it doesnt force a string cast guessing this isnt possible 4 improve serialization of complex values imo this isnt a great option because it doesnt solve the issue of consistencyconfusion but it would be better than the current behavior if all other options are ruled out thanks for considering"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug hook wrongly marked as conditional at exact number of conditionals in fc\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed when using an exact number of conditionals before and after a react hook the react hook hookname is called conditionally react hooks must be called in the exact same order in every component render rule is wrongly flagged as being violated this is a really weird bug and its kind of hard to explain just take a look at the code and watch as eslint flags the hook as somehow being conditional while this may seem like a huge edge case this actually triggered in our code base and caused all hooks in the component to be flagged as conditional react version 1800 doesnt seem to matter steps to reproduce 1 check out this run yarn and run yarn eslint appfootsx 2 watch as the hook is incorrectly flagged as conditional 3 removing or adding one of the conditionals in the return statement makes the bug go away the same goes for removing one of the conditionals above the hook link to code example unfortunately i couldnt get it to work online because of a lack of terminals the current behavior hook is incorrectly flagged as conditional the expected behavior hook should not be conditional"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug cant find unstable value\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed react version 1800 not important steps to reproduce ill show as a code img width593 alt스크린샷 20220404 오전 12 01 05 link to code example please provide a codesandbox a link to a repository on github or provide a minimal code example that reproduces the problem you may provide a screenshot of the application if you think it is relevant to your bug report here are some tips for providing a minimal example the current behavior exhaustivedeps cant found unstable dependency the expected behavior warn lint message opinion i know this code is super weird but this code may be improved something like add more core lint rule like usestate is always declared as a const should find reallocation value and calculate real value or just stay it i just wonder what is your opinion thank you"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact dom umd always warns in react 18\nthis is a false positive img width952 altscreenshot 20220330 at 18 25 00"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug no warning on infinite useeffect loop in react 18\nthis is supposed to consoleerror but it doesnt 17 warns"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nhttpbestellenacitonl repro steps just opening the console and going to components or profiler shows this error i noticed that in the console there are two warnings for contentscriptjs i am assuming this file is part of this extension ﻿ contentscriptjs113 violation message handler took 210ms contentscriptjs113 violation message handler took 891ms how often does this bug happen sometimes devtools package automated devtools version automated 424082762bea5 error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug error occurs when installing reactdevtools in yarn berry project\nrepro steps i tried to install reactdevtools with yarn berry so i encountered this error log  yarn add reactdevtools d ➤ yn0000 ┌ resolution step ➤ yn0002 │ d995e doesnt provide reactdom pd70ba requested by reactariaoverlays ➤ yn0002 │ d995e doesnt provide reactdom pa0a11 requested by ➤ yn0002 │ d995e doesnt provide reactdom pd5c9c requested by reactariacombobox ➤ yn0002 │ doesnt provide babelcore pff6e6 requested by ➤ yn0002 │ doesnt provide babelcore p4f633 requested by ➤ yn0002 │ doesnt provide babelcore pa1fad requested by babelpresetenv ➤ yn0002 │ devfeedworkspace doesnt provide typesreact p5404d requested by nativebase ➤ yn0002 │ devfeedworkspace doesnt provide reactdom pf66e9 requested by nativebase ➤ yn0002 │ devfeedworkspace doesnt provide reactdom pfc556 requested by reactuse ➤ yn0060 │ devfeedworkspace provides p3bb21 with version 421 which doesnt satisfy what nativebase requests ➤ yn0060 │ devfeedworkspace provides reactnativesvg pc0baf with version 1230 which doesnt satisfy what nativebase requests ➤ yn0002 │ doesnt provide babelpresetenv p1529d requested by jscodeshift ➤ yn0000 │ some peer dependencies are incorrectly met run yarn explain peerrequirements hash for details where hash is the sixletter pprefixed code ➤ yn0000 └ completed ➤ yn0000 ┌ fetch step ➤ yn0000 └ completed in 0s 393ms ➤ yn0000 ┌ link step ➤ yn0001 │ error while cloning enoent no such file or directory scandir ➤ yn0000 └ completed in 3s 361ms ➤ yn0000 failed with errors in 3s 927ms how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact devtools wont connect to application running on ios simulator\nreact devtools doesnt connect to the instance running in the ios simulator react devtools screenshot ios simulator screenshot react native appears to have some interactivity as you can see devtools initialized and the inspector on the ios simulator is running in the condensed mode os macos monterey 1221 chip apple m1 pro"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot read properties of undefined reading split\nrepro steps 1 enter the site 2 open reactdevtools 3 select wemaybe suspenses child component 4 and show following errors how often does this bug happen every time devtools package automated devtools version automated 4230e28a0db22 error message automated cannot read properties of undefined reading split error call stack automated text at at at gg at dj at jl at il at hl at wk at al at uk error component stack automated text at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text read properties of undefined reading split intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug unsupported bridge operation 0\nlocal app development repro steps just install react devtools and downgrade to 4110 how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 4230e28a0db22 error message automated unsupported bridge operation 0 error call stack automated text at at cemit at at at arrayforeach anonymous at aeonmessage at at at aemit eventsjs31520 at eexportsl at eexportsemit eventsjs31520 error component stack automated no response github query string automated text bridge operation intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug devtools failed to load source map\ninital react app npm createreactapp repro steps 1 created initial react app 2 typed npm start inside app folder 3 check console of chrome browser this is what i get on my console in chrome version 980475882 official build 64bit as these messages are annoying please let me know how to fix this how often does this bug happen every time devtools package automated no response devtools version automated 4230 error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug unsupported bridge operation 0\nnone repro steps gaolinxiong how often does this bug happen only once devtools package automated reactdevtoolscore devtools version automated 4230e28a0db22 error message automated unsupported bridge operation 0 error call stack automated text at at cemit at at at arrayforeach anonymous at aeonmessage at at at aemit eventsjs31520 at eexportsl at eexportsemit eventsjs31520 error component stack automated text 123 github query string automated text bridge operation intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools should not crawl unmounted subtrees when profiling starts\npreviously we crawled all subtrees even notyetmounted ones to initialize context values this was not only unecessary but it also caused an error to be thrown this commit adds a test and fixes that behavior resolves 22970 test before screen shot 20220121 at 10 51 54 test after screen shot 20220121 at 10 52 03"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug chrome dev tools extension shows websites built with other framework as react web sites\nhttpsangulariostart repro steps 1 go to httpsangulariostart or httpsvuejsorg 2 click on react dev tools extension 3 you should see message this page is using the production build of react checkmarkbutton how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug highlight updates when components render\nnothing repro steps create a component list memoized reactmemo and if you only modify 1 of them this will mark that all are rendered but if they are memoized the report says not rerenders detected screenshot from 20220115 if you see near to typography all those children are memoized and they arent rerendering expected but devtools still highliting them if u see those yellow boxes how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug this page is using the react build message in every site\nyoutubecom githubcom gmailcom lucidchartapp repro steps 1 open any web app not made with react eg youtubecom amazoncom githubcom gmailcom lucidchartapp 2 the react icon is on and the popover message says this page is using the production build of react checkmarkbutton how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact 18 context providers are reset to initial value in ssr during rendering\nask a question or share feedback about the react 18 release here while testing ssr streaming in latest react 18 experimental and alpha versions we that context providers are reset to their initial values during rendering under certain conditions it works well when handling 1 request at a time however when the server gets 2 or more requests at the same time the context providers seem to get confused the context is correct at the beginning of the rendering for each request but it gets lost after a while theres a reproduction here using gaearon s demo to my understanding since the react tree is wrapped in a provider in ssr usecontext should never return null in the server have a look at the terminal and see how it actually logs null sometimes when getting multiple requests 0 this should never be null read function read 0 this should never be null read function read 0 this should never be null null 0 this should never be null null run the following code from the console to simulate multiple requests js function dorequest return headers accepttexthtmlthenr rtext await promisealldorequest dorequest we saw this same issue in different setups using both webpack and vite thanks"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug error could not find id for fiber\nrepro steps 1 install repo 2 run repo 3 visit playground in your browser of choice 4 navigate to the dev tools and you should see the error how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot read properties of undefined reading push\nrepro steps just view the components tab this site is written in rescript actually this is all the rescript code you need to break devtools rescript reactcomponent let make let unit unit reactupdatenoupdate reactuseeffect none div reactupdate is provided by how often does this bug happen every time devtools package automated devtools version automated 42200229baee2 error message automated cannot read properties of undefined reading push error call stack automated text at f at h at at inspectelementraw at objectinspectelement at at bridgeemit at at listener error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text read properties of undefined reading push intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\napp repro steps 1 run npm start for native 2 run android for native 3 run react native debugger and thats how happened how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 4140d0ec283819 error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at cemit at at at arrayforeach anonymous at sgceonmessage at sn at semit eventsjs31520 at eexportsp at eexportsemit eventsjs31520 at eexportsdatamessage at eexportsgetdata at eexportsstartloop at eexportswrite at dowrite at writeorbuffer streamwritablejs3875 error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug\nusing reactdom1800rc0 inside a nextjs projectnext1207 then opening a antdhttpsantdesign dropdown will cause page to be deadly frozen after downgraded react to 1702 the issue disappears my wild guess this issue caused by some conflict btw dom manipulation and animation im happy to show detailed stuff if the react team needs react version 1800rc0"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nrepro steps accualy this bug appears only on react native debugger the web version of debugger doesnt show any errors the project is new and i just installed packages expo install reactnavigation expo install reactnavigationstack expo install expoapploading expo install reactnativescreens expo install so my dependencies are json dependencies expo 4302 expostatusbar 110 react 1701 reactdom 1701 reactnative 0643 reactnativeweb 0171 reactnavigation 444 reactnavigationstack 2104 expoapploading 121 reactnativescreens 380 332 i checked and now this bug appears in every new expo init even if it is just blank project old projects work fine how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 4140d0ec283819 error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at cemit at at at arrayforeach anonymous at sgceonmessage at sn at semit eventsjs31520 at eexportsp at eexportsemit eventsjs31520 at eexportsdatamessage at eexportsgetdata at eexportsstartloop at eexportswrite at dowrite at writeorbuffer streamwritablejs3875 error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreactdevtools report error cannot find module app\nreactdevtools version 4220 npm g install reactdevtools reactdevtools throw err error cannot find module app require stack at at functionresolve at objectanonymous at modulecompile at at moduleload at functionmoduleload at as runmain at code modulenotfound requirestack"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug fetch api cannot load webpackinternal url scheme webpackinternal is not supported\nhttpsprntsc22rtnf0 repro steps most actions in devtools search for component click on component hook parsing profile record etc cause this error i am using nextjs 12 within a nx monorepo how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nrepro steps 1 open chrome with 50 tabs 2 run reactbased website locally 3 open chrome dev tools to investigate activelink hierarchy inside navbar 4 activelink component from was used 5 get uncaught error how often does this bug happen sometimes devtools package automated devtools version automated 42102f8f60ca8 error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug error checking code is skipped for async useeffect argument\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed react no longer complains when the function passed to useeffect returns a promise either directly or by being labeled async im not in the habit of doing this so it was only when i watched someone else make the function async and there were no errors that i realized that something had changed since 6131 the newest version i could find that still complained i can see the functionality is still present in in but when i trace through it the effecttag is set to a different value and the test is skipped i realize that we now have an eslint rule that provides the same message but the lack of warning caused confusion about whether asynchronous functions were now allowed react version 1702 steps to reproduce 1 write a useeffect that has an async function 2 open the console and observe that it doesnt complain your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react issues without reproduction steps or code examples may be immediately closed as not actionable link to code example please provide a codesandbox a link to a repository on github or provide a minimal code example that reproduces the problem you may provide a screenshot of the application if you think it is relevant to your bug report here are some tips for providing a minimal example the current behavior the code runs with no complaints and the cleaner function is ignored the expected behavior the console should show the warning warning an effect function must not return anything besides a function which is used for cleanup it looks like you wrote useeffectasync or returned a promise instead write the async function inside your effect and call it immediately useeffect async function fetchdata you can await here const response await myapigetdatasomeid fetchdata someid or if effect doesnt need props or state"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact 18 bug reactdomserver detected multiple renderers if preceeded by reacttestrenderer\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed react version steps to reproduce 1 render a context with reacttestrenderer wrapped in act 2 render the same context with reactdomserver your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react issues without reproduction steps or code examples may be immediately closed as not actionable link to code example js const context function component renderer return contextprovider valuerenderer div contextprovider let testrendererroot reacttestrendereract testrendererroot component reacttestrendereract the current behavior rendertostring results in the console error warning detected multiple renderers concurrently rendering the same context provider this is currently unsupported the expected behavior no error like in react 17 considering all renders are wrapped in their corresponding act i dont expect that im concurrently rendering i tried to understand when we reset the renderersigil responsible for checking if we concurrently rendering is reset and it seems like we never reset it but only initialize it when creating the context createcontext so it either seems like multiple renderers in the same module are not supported anymore or the reset is missing"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot read properties of undefined reading push\nrepro steps i stumbled across the weirdest bug with react devtools and hooks that causes it to error out when inspecting a component a minimal test case is documented in the code sandbox link along with more details on the behavior and seeminglyarbitrary fixes this does not affect the actual functionality of the app itself in any way it behaves exactly as expected how often does this bug happen every time devtools package automated devtools version automated 42102f8f60ca8 error message automated cannot read properties of undefined reading push error call stack automated text at j at l at at inspectelementraw at objectinspectelement at at bridgeemit at at listener error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text read properties of undefined reading push intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug react instrumentation encountered an error error could not find id for fiber portal\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed react version 1702 steps to reproduce 1 when i execute modalhide 2 your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react issues without reproduction steps or code examples may be immediately closed as not actionable link to code example please provide a codesandbox a link to a repository on github or provide a minimal code example that reproduces the problem you may provide a screenshot of the application if you think it is relevant to your bug report here are some tips for providing a minimal example the current behavior the expected behavior"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug dispatcheruseid is not a function\nhttpsc8wikcsbapp repro steps 1 open httpsc8wikcsbapp 2 inspect app how often does this bug happen every time devtools package automated devtools version automated 42102f8f60ca8 error message automated dispatcheruseid is not a function error call stack automated text at useid at app at l at at inspectelementraw at objectinspectelement at at bridgeemit at at listener error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text is not a function intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug usesyncexternalstore fails to install via npm\nwhen trying to install the usesyncexternalstore package via npm i receive an error that it depends on a version of react that doesnt seem to exist react version 17 steps to reproduce 1 mkdir example cd example npm init 2 npm i react reactdom usesyncexternalstore the current behavior npm fails to install the usesyncexternalstore package with the following error npm i usesyncexternalstore npm err code eresolve npm err eresolve unable to resolve dependency tree npm err npm err while resolving example100 npm err found react1702 npm err nodemodulesreact npm err react1702 from the root project npm err npm err could not resolve dependency npm err peer from npm err npm err usesyncexternalstore from the root project npm err npm err fix the upstream dependency conflict or retry npm err this command with force or legacypeerdeps npm err to accept an incorrect and potentially broken dependency resolution npm err the expected behavior it successfully installs the package and i can use it in react v17 and the latest alpha version"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nscreen shot 20211021 at 12 23 23 screen shot 20211021 at 12 22 57 daily harvest repro steps 1 enable debug on the ios emulator 2 enable inspector 3 disable inspector navigate to a different screen 4 try enabling inspector again how often does this bug happen every time devtools package automated reactdevtoolscore devtools version automated 4180f58bbcf9a error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at cemit at at at arrayforeach anonymous at aeonmessage at at at aemit eventsjs31520 at eexportsf at eexportsemit eventsjs31520 error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug blank tools localhost uncaught error could not find id for fiber\nwwwgooglecom repro steps react devtools 4200 react 1686 not sure if relevant but reactscripts 403 first i get an blank devtools components but when picking select element arrow and hover over elements a lot of errors like this one shows up in the console uncaught error could not find id for fiber contextprovider at getfiberidthrows at at at showoverlay at onpointerover getfiberidthrows getfiberidfornative inspect showoverlay onpointerover no other errors occur devtools works fine on deployed version eg httpsreactjsorg works fine pr and issue that could be related issue pr maybe relevant comment from author and maintainer of react devtools earlier fiber how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug blank tools localhost only\ngooglecom repro steps this started after last update 4200 how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 1 because a node with that id is already in the store\nrepro steps not able to see how often does this bug happen sometimes devtools package automated devtools version automated 419220ca9b565 error message automated cannot add node 1 because a node with that id is already in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug cannot add node 2934 because a node with that id is already in the store\nhttplocalhost3000 repro steps when i was using react select and dropdown i clicked on and before opening the dropdown this error showed up and react dev tools stopped working how often does this bug happen sometimes devtools package automated devtools version automated 41902178a831a error message automated cannot add node 2934 because a node with that id is already in the store error call stack automated text at at bridgebridgeemit at at listener error component stack automated no response github query string automated text add node because a node with that id is already in the store intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug could not inspect element with id 15 error throwncached data for element 15 not found\nrepro steps cd repo and then start the server using npm start in browsermozilla firefox when i try to add the user and age and trying to debug the output in listusers component i m facing this error screenshot from 20211001 how often does this bug happen only once devtools package automated devtools version automated 41902178a831a error message automated could not inspect element with id 15 error throwncached data for element 15 not found error call stack automated no response error component stack automated text suspense div div div div div div div div github query string automated text not inspect element with id error thrown cached data for element not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug emoji as visual helper produce strange symbole\nrepro steps emoji seem supported but produce strange symbole to test emoji on window os use win greensquare how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug emoji seem supported but produce strange symbole\nrepro steps emoji seem supported but produce strange symbole very low priority maybe because it affect nothing how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug hook parsing fails with fetch error\nrepro steps have a webpack project that uses a domain mapped to your local ip such as appxwhenidevnet in my case thats served with https try to resolve hook names check console and observe the million errors shows my console how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools backend console settings reportedly not synced to rn backend\nfeedthejim reported that disabling the break on warning feature does not update the backend settings in memory without a reload for react native screen shot 20210914 at 11 07 04 i believe the new settings should be updated here but it sounds like they arent we should investigate"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug could not inspect element with id 28 error throwncached data for element 28 not found\nwebsite url localhost repro steps clicked the reload devtools button to turn devtools in light mode devtools were already in light mode how often does this bug happen only once devtools package automated devtools version automated 4180f58bbcf9a error message automated could not inspect element with id 28 error throwncached data for element 28 not found error call stack automated no response error component stack automated text at at suspense at at div at at at div at div at at at componentscomponents at at div at div at themeprovider at portaledcontent at div at div at div at themeprovider at at at at at at devtoolsdevtools github query string automated text not inspect element with id error thrown cached data for element not found intitle isissue isopen ispublic labelcomponent developer tools repofacebookreact"}, {"role": "assistant", "content": "bug"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools bug provide an icon to edge devtools\nwebsite httpsreactjsorg repro steps 1 open developer tools in edge 2 go to settings experiment enable focus mode reload devtools 3 we can see the react extension is loaded as below in devtools 4 since the react extension doesnt provide the icon when its created devtools fallback to use the default icon to represent the extension however weve received couple of requests from users that theyd like to see the icon in the panel for instance wondering if its possible to provide an icon to edge in the thank you for your support how often does this bug happen every time devtools package automated no response devtools version automated no response error message automated no response error call stack automated no response error component stack automated no response github query string automated no response"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug onresize media event is missing\nnote i’m happy to make a pull request to fix this i just wanted to log it first to ensure there’s interest react’s synthetic media contain several existing media for instance onloadedmetadata and onvolumechange but there is no onresize handler resize is a standard media that triggers when one or both of the videowidth and videoheight attributes have just been updated it’s useful for responding to resolution changes in video players react version 1702 latest release as of initial issue report steps to reproduce 1 create a video element with an onresize prop 2 check the console for the following warning warning unknown event handler property onresize it will be ignored link to code example the current behavior onresize handlers are ignored on video elements the expected behavior onresize handlers are valid on video elements"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature requestdevtools launcheditor for selected component\nwhy user can open the source file in editoride by oneclick it is a useful feature in vuedevtools how add a click event on here call add to devserveror any scaffold handle by himself before anyonemaybe me sends a pr i want to know how do the reactteam thinks about it"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature proposal hook equivalent to createslice from redux toolkit\nwould this be useful a function that accepts an initial state an object full of reducer functions and a slice name and automatically generates action creators and action types that correspond to the reducers and state from"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools feature request break on warnings\nitd be nice to have a toggle to pause the debugger when warnings fire so you can inspect the stack as its happening consoleerror function if isbreakon debugger see"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nallow opting out of\nat the moment when in development mode react uses a special workflow for callbacks to avoid using trycatch it works well so well that several testing frameworks also get their uncaught exception handling triggered example with mocha js import react from react import render from testinglibraryreact function mycomponent dothrow if dothrow throw new errorim bad return divdiv itshould throw function expect rendermycomponent dothrow tothrow behavior when running the test with the production build of reactreactdom the test passes with the usual warning of act being unsupported in prod build when running the test with the development build of reactreactdom the test fails with error uncaught error im bad the root cause is runs the callback in an event to avoid using a trycatch block… and trips mochajs uncaught exception detector note i am aware of error boundaries i removed it from the example because the behavior is identical with it note i used testinglibrary for clarity but using act and renderdom manually yields the same result expected behavior either make it work out of the box or have the possibility to opt out of and force the use of the regular trycatch implementation in development too"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools hovering rendered by list should highlight elements\nthis list is pretty awesome img width390 altscreenshot 20200403 at 00 12 08 but always struggle to guess which component in the owner list i need to jump to we should make hovering the owner list highlight components just like the main tree view does hristokanchev interested"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd colors to components name in component tree for visual feedback about type of component or node\nwhat is the current behavior all the components name in the component tree are of the same color what is the expected behavior it would be helpful if they have different colors indicating the type of component whether its native html node or contexts or simple react component i know we can filter it but visual indication will be helpful too"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreactrefresh add options to override refreshreg and refreshsig for better systemjs integration\ndo you want to request a feature or report a bug feature right now babel plugin emits globals js windowrefreshreg windowrefreshsig type type it would be nice to have them configurable that would allow to use importmeta in environments like systemjs and have simpler implementation js import runtime from reactrefreshruntime function url return url refreshsig refreshreg type id id url id runtimeregistertype id if you dont mind i could create pr with changes to reactrefreshbabel next week environment js systemjs 614 react 16110 reactdom 16110 reactrefresh 060"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\napply propsstatehooks edits on blur\ndo you want to request a feature or report a bug feature what is the current behavior trigger by press enter button what is the expected behavior trigger by out of focus or pressing enter button"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact devtools force rerender button\nid like to have a button that forces a rerender of the selected component when clicked for example adding a button like this on the right of the component controls this can be accomplished today by adding a new prop and changing the prop but its more work than i want to do this would be useful for use while profiling how a component performs with unnecessary rerenders right now i just have a button thats tied to a forcerender function jsx function useforcererender const set reactusestate return reactusecallback set function filtercomponent const forcererender useforcererender return button rerenderbutton more jsx would be cool to have this builtin"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nenhance react devtools why did this render for values nested in prop objects\ndo you want to request a feature or report a bug feature what is the current behavior as demonstrated here why did this does a great job reporting what prop changed but it does not yet report which nested value changed for props that are comprised of nested objects what is the expected behavior the why did this render shows a collapsible tree with the leaf value that changed inside the prop object displayed a couple use cases this would benefit in some cases it is most convenient creating props that are nested objects for instance maybe you need to pass an object to a library and youd like to avoid storing the individual object items as separate prop variables such that you dont need to redefine them together as a dict later on but changes are due to a single element in the dict that youd like visibility on in react devtools in rarer cases it is unavoidable having props that arent nested objects for instance how could i preserve the prototype key of my props object without react stripping it if i wrap my props inside an object that key can be preserved but now all my props are considered 1 prop to the profiler and i have no visibility on which prop changed with this change i could expand the tree and drill down to which individual values changed which versions of react and which browser os are affected by this issue did this work in previous versions of react new feature never before released in react devtools i am using 1686"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nshow property type of value stringintetc on stateprops\nfeature what is the current behavior on the new developer tool you are unable to see what property type the value you used to be able to see if the value was a string or int because of the quotation marks for example id 1 string or id 1 int both string and int are shown without quotes what is the expected behavior i want to see if the value inside the prop or state is an string or integer by using quotation marks on the value id 1 which versions of react and which browser os are affected by this issue did this work in previous versions of react im using version 405 8192019 did this work in previous versions of react yes 3"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools v4 where is highlight updates\nif i understood correctly this is the correct repository for devtools v4 right i just noticed that react devtool were updated im missing the highlight updates function how can i activate it version 402 8152019"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nnew devtools cannot expand obervables\ndo you want to request a feature or report a bug bug what is the current behavior devtools used to be able to expand observables created by mobx with the new update that is no longer possible if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below check the props of the wrappedcomponent in devtools storethings does not expand what is the expected behavior devtools should expand observables as it does any other object which versions of react and which browser os are affected by this issue did this work in previous versions of react this only seems to be an issue with observables created by mob v4 v5 works as expected"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature request finishnormalize portal api\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature what is the expected behavior portals are in a weird state the core react knows about them but you can only create them from other libs eg reactdom you have to branch your code because they can’t be serverside rendered and so on this is just a prerfc to brainstorm ways that portals can become firstclass citizens extend reactcreateref to allow an optional rendererspecific argument eg the dom element matching useref add ref note the use of ref rather than a eg a direct dom element deprecate reactdomcreateportal now with some thought into the structure of your app with modals they could be eg serverside rendered with function appprops const modal userefnull return div modalcontextprovider valuemodal divpropscontentdiv modalcontextprovider div refmodal div function modalprops const modal return reactcreateportal propschildren modal somewhere in propscontent tree return visible modal hello world modal after reactdomcreateportal is deprecated legacy web or those with no need to ssr portals can simply upgrade with thisel for the same behavior as an initial version react can error if refcurrent is null when it goes to mount the portal some sort of dirty flag could be considered separately if proven necessary but with the pattern proposed above it shouldn’t be necessary as the portal host would always be mounted first as a natural consequence of how react works"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nallow reactnode as a type for the child of option\ndo you want to request a feature or report a bug feature what is the current behavior currently the options element only allows types number and string what is the expected behavior an option should allow for a reactnode as a child in addition to a number string which versions of react and which browser os are affected by this issue did this work in previous versions of react all versions all browser types to the best of my knowledge no ps this is my first feature request here so let me know if i need to adjust the feature request in any way"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprovide withhooks hoc to decouple hooks and components\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature what is the current behavior currently the recommended way to use hooks involves coupling them with components by this i mean that components are aware of the hooks they consume and depend on them explicitly this issue thread on the recompose discusses this issue in some detail and how recompose favored keeping components dumb but wraps them in hocs to make them smart hooks promote baking the smartness right into the component itself what is the expected behavior react should offer a way to decouple components from the hooks they consume i suggest a withhooks hoc that maps hooks to props this will be a familiar model for those who have used redux with react jsx const withhooks maphookstoprops wrappedcomponent return props let hookprops maphookstopropsprops return wrappedcomponent hookprops props const counter props return div divcounter propscounterdiv button button div const maphookstoprops props let counter setcounter usestate0 return counter increment setcounterprev prev 1 decrement setcounterprev prev 1 const enhancedcounter demo some reasons why this is nice 1 it decouples components from the things that make them smart some examples of things that could make dumb components smart include hooks redux and good ol parent components by mapping hooks to props we make it very easy to swap a dumb components hookpowered brain for a new brain say a reduxpowered brain 2 not sure if its a good idea but i know several people trying to replace redux with hooks in their applications for these people migrations from redux to hooks would be dead simple because they could replace mapstatetoprops and mapdispatchtoprops with maphookstoprops and wouldnt have to worry about touching the underlying component 3 testing is also easier because we can test the component in isolation without the hooks baked in 4 it makes prop overrides possible in the case of our enhancedcounter we could override the counter prop by doing enhancedcounter counter10 a real world example of hooks making things harder to override includes materialuis new styling approach via because classes are provided via hook and no longer via props we would need custom logic to override classes via props with the new hookbased approach jsx export default function hookprops let classes usestyles classes classes propsclasses return button which versions of react and which browser os are affected by this issue did this work in previous versions of react for versions of react 168"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature request export of reactdom libraries\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug its a feature what is the current behavior internal shared libraries of is not exported if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below na what is the expected behavior it is great that some shared libraries such as or are exported from reactdom and available externally they are useful to know what types of html tags are regarded to be valid one by react for example with static analysis issued at which versions of react and which browser os are affected by this issue did this work in previous versions of react na"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd option in shallow renderer to run\ndo you want to request a feature or report a bug feature what is the current behavior the shallow renderer does not run componentdidupdate componentdidmount or useeffect functions ill call them effect functions for short what is the expected behavior see this enzyme for more details about where this request is coming from but the general idea is that it is often nice to run effect functions even when shallow rendering rather than having to use full rendering on those specific tests if the shallow renderer provided an option to run the effect functions it would allow people who test with shallow rendering to more easily test their components enzyme currently supports this in class components by calling directly on the component instance but this would be a much harder thing to do for hooks since they are usually anonymous enzyme used to not allow this at all but then added an option to turn on this behavior in their shallow renderer before finally turning it on by default and then adding an option to turn it off it didnt seem to cause too many issues for them so i think this approach could work well for the react shallow renderer as well obviously im only asking for an option to turn it on now not to change the default or anything which versions of react and which browser os are affected by this issue did this work in previous versions of react all and no it was never supported afaik"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nusing context to pass down mount order to children with concurrent\ndo you want to request a feature or report a bug feature use case what is the current behavior it seems currently there is no way to get the order of children from the children themselves with context what is the expected behavior ive run into this now in three use cases when building a style system breadcrumbs segmented views and text rhythmspacing example 1 breadcrumbs you want to show an arrow on all but the last breadcrumb but they may be deeply nested ts let breadcrumborder createcontext index 1 total 1 let button props let order return div style borderright orderindex total 1px solid red none props let myview return breadcrumbprovider button button divbutton div breadcrumbprovider where myview should provide the ordering so that the subviews can access total and index and properly style the other use cases are basically identical but for different patterns one is for joining together buttons that are in a row in the interface segmented and the other is for collapsing margins when you have text elements in a vertical column really this ticket encompasses more of a question or request for documentation clarity here im not sure how it is not preconcurrent but im assuming mountorder will be nondeterministic if not now then shortly is there any reference to a pattern that works for this use case namely how children can access their mount order total children i can do it now usereducercontext but ive seen it mount in a weird order at least once and think it was due to a suspense type thing and would be curious a better practice for this"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nusecontext throw error if usecontext is used outside function components\ndo you want to request a feature or report a bug feature need better errors what is the current behavior consider the following functional component import react usecontext from react const myfunctioncomponent props divhello usecontextdiv the immediate reaction for most of us newbies to hooks to refactor the above code to accomodate usecontext is as follows import react usecontext from react import mycontext from mycontext react does not throw error const mycontextvalue usecontextmycontext const myfunctioncomponent props divhello usecontext mycontextvaluediv the way to actually refactor is to explictly convert the arrow function return expression into a function body and then accomodate usecontext inside along with a return statement like this import react usecontext from react import mycontext from mycontext const myfunctioncomponent props const mycontextvalue usecontextmycontext return divhello usecontext mycontextvaluediv not only react does not throw error react app actually compiles while the component in question fails to load with no information this is very difficult to pin the reason to this specific issue what is the expected behavior react should ideally throw some kind of error when usecontext is used outside of function components this lack of error really bites us for people who are refactoring function components without a return statement which versions of react and which browser os are affected by this issue did this work in previous versions of react react 168x with hooks support"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\neslint hardcore rule allowing default hooks using only inside custom ones\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature what is the current behavior there is no rule what is the expected behavior we have some hardcore plugins like eslintpluginlodashfp why not have eslint hardcore rule allowing default hooks using only inside custom ones"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\npass dependencies to usememo callback as arguments\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature what is the current behavior the usememo factory function does not receive any arguments what is the desired behavior the usememo factory function would receive the dependencies as arguments why this would allow more compact syntax for memoizing components because of implicit returns and desctructuring this came to mind after experiencing some of the issues in 14110 there may be other potential use cases too example of current behavior jsx const avatar const src usesomeglobalstate state stateuseravatarsrc return usememo img srcsrc src example of proposed behavior jsx const avatar usememo src img srcsrc stateuseravatarsrc which versions of react and which browser os are affected by this issue did this work in previous versions of react react 1681"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nunhelpful warning for act for reactdom168\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug featureimprovement what is the current behavior if there is test code that should be wrapped in act then the current warning is given consoleerror warning an update to null inside a test was not wrapped in act when testing code that causes react state updates should be wrapped into act act fire events that update state assert on the output this ensures that youre testing the behavior the user would see in the browser learn more at when upgrading a large code base this is basically useless what is the expected behavior provide at least the test name if not the line number of code that triggered the warning which versions of react and which browser os are affected by this issue did this work in previous versions of react react1680 reactdom1680"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadding if directive\nif you added if directive to any element for showing the element or not that would be better than making a js expression in my opinion regular way js const app props reactiftrue let name propsname return div name koko div null div reactdomrenderapp namekoko my way i edited the react file btw and it worked js const app props let name propsname return div div classnameyousef reactifname kokonamediv div reactdomrenderapp namekoko mmm i hope you talk that into consideration i mean less than 1kb will not make difference d react code js var reservedprops key true ref true self true source true reactif true if config null if hasvalidrefconfig ref configref if hasvalidkeyconfig key configkey i added that if configreactif reactif configreactif if reactif false return null else if reactif true reactif false consoleerrorreactif expression didnt return bolean value self configself undefined null configself source configsource undefined null configsource remaining properties are added to a new props object for propname in config if propname propspropname configpropname"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsupport proxy as child\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature what is the current behavior objects are not valid as a react child if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below na what is the expected behavior im trying to build a system that autodetects if data is used in a react component to do this i detect usage during render by using proxies which can register all access this data in turn is used to prevent needless rerenders a parent component can pass a proxy which represents a string for example to a child component which without knowing it is a proxy can use this value in a calculation eg propsvalue 1 or the value is propsvalue this can be handled with which is called by js automatically when used in this sort of expression however this doesnt work if the child now passes the proxy directly to react as a child jsx return react will do a typeof on the child find it is an object and report objects are not valid as a react child unfortunately typeof cannot be spoofed with proxy and it will always return object the relevant code is found the alternative could be for react to check if theres a and if so evaluate it to find the intended value and to retry with this value as the child it could be as simple as inserting the following code js if typeof symbol undefined const toprimitive if toprimitive const value toprimitivestring if typeof value object return value namesofar callback traversecontext it would be great if react would support this usecase the alternative is for parent components to resolve the value which would attribute the access to the parent component instead of the child where its really being used this in turn would cause the parent to be rerendered when only the child is being changed if the child is aware it may be receiving proxy objects it can resolve the value itself however the whole point of using proxies is to automate all the refresh logic like also not needing to resolve the value would allow the value to propagate through to descendant components which may be wholly unaware of the proxy which versions of react and which browser os are affected by this issue did this work in previous versions of react all version never worked before"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nmake it easier to debug when context uses defaultvalue accidentally due to no provider\ni just spend several hours debugging app blaming everything except me ofc i am using this usetheme hook ts import react from react import themecontext from contextsthemecontext const usetheme const theme if theme null throw errorusetheme please provide themecontext value return theme export default usetheme some styles were light while other dark very strange then i found the bug in my code themecontextprovider was sometimes used after using usetheme themecontext had an initial value different than provided while its probably fine that react allows us to use default context value without a parent provider it can lead to hard to find bugs therefore i decided to never provide default context value and throw an exception in usefoocontext hook to warn about it because of dx react should reconsider default initial context values in my humble opinion"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nshould report errors inside unnamed functions\ni want to report a bug for the hooks plugin what is the current behavior there was no error report after running eslint but the component failed when running in the browser from the chrome dev console it reported uncaught error rendered fewer hooks than expected this may be caused by an accidental early return statement if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react here is a link to the github repo what is the expected behavior followed the hooks api guide which says react hooks provides a linter plugin to enforce these rules it should have reported a usage violation when the eslint hooks plugin is specified which versions of react and which browser os are affected by this issue did this work in previous versions of react using window 10 os and chrome browser 1 first ran npx createreactapp hooks 2 installed react 1670alpha2 and reactdom 1670alpha2 3 installed eslint dev dependencies babeleslint 900 babelloader 804 eslint 590 eslintconfigairbnb 1710 eslintloader 211 eslintpluginimport 2140 eslintpluginjsxa11y 612 eslintpluginreact 7111 000 4 created the eslintrcjson following the instructions from the hooks api doc then ran package script lint as follows npm run lint no errors reported then ran package script start as follows npm start the react component counthooks calls usestate incorrectly and reports error in the browser dev console"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature idea useerror hook\ndo you want to request a feature or report a bug feature idea what is the current behavior currently there is no hook for dealing with errors in a components subtree what is the expected behavior have a hook that allows for functional components to act as error boundaries example function myerrorboundary const caughterror useerrorcatching if caughterror null return errorhandler errorcaughterror return regularcontent which versions of react and which browser os are affected by this issue did this work in previous versions of react na"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreactis memo\nfeature request what is the current behavior reactis now doesnt have method to check if element is memolike isforwardref maybe there are some reasons why its not implemented"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsupport reporting suspense loading indicator outside of the suspended tree\ncryptic title i can imagine but i am not aware that something like this would have been mentioned anywhere so far i have a page showing some statistics and its split into two even panels the left panel is showing some numbers and contains a form to set necessary filters the right panel is showing some other details about filtered data initially only filter form is visible nothing else the user sets the filter and hits the filter button to send out a request there is a requirement to show a text loader in the left panel and the right panel should be showing content loader animation too many loaders perhaps well it kinda makes sense in this context now my confusion is how to achieve that obviously i dont want each panel to run the same query on its own i would like to do that once in the upper level i can surely pass down the isloading prop to both panels however i am not too happy about it because once there will be a fully fledged data fetching relying on the suspense it would mean that for such scenarios i will need to fall back to a regular solution am i misunderstanding something in here"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsynthetic keyboardevent should support keyboardeventcode\ndo you want to request a feature or report a bug feature what is the current behavior the current synthetic keyboard event does not support the property what is the expected behavior the synthetic keyboard event should pass along the property this is currently in the wd of dom events but is part of replacing keycode and charcode and is much more consistent and easy to use this is currently only supported by ff and chrome so it may be a bit premature to fully integrate however keycode charcode and which are being deprecated so this will eventually need to be added edit i spoke too quickly caniuse shows that ff chrome safari and opera support it ie edge and most mobile browsers do not"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprovide a way to trigger useeffect from tests\nhello i tried testing components that use the cool new hooks api but useeffect doesnt seem to work with the test renderer heres a small failling jest test js import react useeffect from react import create as render from reacttestrenderer itcalls effect return new promiseresolve effectresolve function effectfulcomponent effect useeffecteffect return null and heres a minimal reproducing repo note that other use apis seemed to work eg usecontext"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\n166 contexttype\ndo you want to request a feature or report a bug feature what is the current behavior context not passed into static state context just curious with the new static contexttype it would save a lot of nesting if i could access context now from when using this pattern i gave it a shot assuming it may work already but i get undefined from the third argument just curious if theres been any discussion on this"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nconditional components\nnote if the issue is about documentation or the website please file it at feature what is the current behavior often we will use expressions like this x null component titlextitle what is the desired behavior we would like to have expressive components such as when cx component titlextitle when in many cases this generic syntax is preferred over an explicit child component or pure function which knows about what it is supposed to render the issue is that this will evaluate the children even if they ultimately are not returned since they are passed as children to the when component what is desired is for the syntax above to be able to behave exactly like a conditional expression in that the contained children are not actually processed at all unless a condition is met in reality the component could be something else entirely such as superuser which will only process and render the children if the current user is a super user or morning to only process and render items between 8 am and 11 am or similar the key thing is that we do not want the props passed into the children or the children themselves produced unless a condition has been satisfied which versions of react and which browser os are affected by this issue did this work in previous versions of react presumably any version of react"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nis it possible to use profiler server side\nim trying to use the profiler server side rendering with rendertostring but the onrender callbacks are not getting called is there a way to do it im using 1651 nodeenv development my code looks like this works fine client side javascript import react unstableprofiler from react const profilercallback id phase actualtime basetime starttime committime consolelogids phase phase consolelogactual time actualtime consolelogbase time basetime consolelogstart time starttime consolelogcommit time committime const mycomponent profiler idcard profiler"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncache provider add hooks to read and preload in dev mode\nthis topic originally came up in a reactdevtools discussion do you want to request a feature or report a bug feature what is the current behavior the package simplecacheprovider does not presently provide hooks to understand when weve pulled a resource for the first time hit the cache or dropped something from the cache due to maxsize due to this tools such as reactdevtools cannot provide an interface around our cached resources which makes debugging inspection harder what is the expected behavior it would be great if there was a way to expose callbacks events for when the cache resource has resolved an idea would be to fire these callbacks events in the existing switch statement in read preload if we are in dev mode with this information we could have a reduxdevtoolsesque interface to better understand where our data is coming from and when were hitting the cache in dev mode tools like this would also be useful to people new to the suspend api to visually see their resources transition between the various record states"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprovide a testinstancecontext property to facilitate context testing\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature request what is the current behavior testinstance provides a props property but does not provide a context property allowing for context tests what is the expected behavior testinstancecontext should return an object containing the instances current context which versions of react and which browser os are affected by this issue did this work in previous versions of react at least 1641"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nability to use return value of reactchildrenmap with reactchildrenonly\nas stated in the docs and shown in 4410 the return value of reactchildrenmap is incompatible with the reactchildrenonly function and will return with the error message invariant violation invariant violation reactchildrenonly expected to receive a single react element child if used this incompatibility causes some fairly annoying restrictions however from what i understand this means that you cant edit the properties of a components children at runtime if they contain any component that requires a single child eg you cant dynamically set the disabled prop of a child component in the parent i believe this is due to the type differences between the thispropschildren parameter and the reactchildrenmap return value the former being a valid element and the latter not see 4424 and id like to make a request to have the return type of reactchildrenmap be the same as the type of thispropschildren which will fix these quirks and be much more intuitive a separate static function that converts the return type of reactchildrenmap to the same type as thispropschildren would also solve the issue it feels like some sort of fix is in order since its a broad and strange restriction on the components you can use"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nidentify different instances of react component in performance measures\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature can fiberdebugid also be part of performance measure along with component namedisplayname to distinguishtrack multiple instances of a react component in performance measures please let me know if there is any other way already available to achieve this"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd a way to compare relative positions of deep children\nhey it seems like there is currently no way to take two mounted component instances and tell which one of them is coming earlier in the application structure they could have been mounted asynchronously and tracking the time is not enough ideologically i cannot traverse the application tree that is understandable though the relative positions are needed sometimes my use case — i track focusable elements in the application using context each focusable element reports of its existence to a focus manager which is provided by the context this is needed to be able to limit the of all elements which are outside of the currently shown modal dialogpopup so that the focus is trapped inside for the sake of better accessibility i need to automatically focus first focusable in the modal dialog when im in the keyboard navigation mode so i have the references to all focusable elements inside the dialog but i cannot tell which one comes first using public react api for web there is a workaround to finddomnode and but that doesnt work with react native can we have something similar to but for react component instances thanks"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsynthetic keyboard events dont implement the code property\ndo you want to request a feature or report a bug feature what is the current behavior eventcode is undefined what is the expected behavior code is a very useful part of the keyboardevent spec which versions of react and which browser os are affected by this issue did this work in previous versions of react i am on react 163 but i saw no mention of this in todays 164 changelog"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprovide hoc for new context api\ni find myself needing a higherorder component every once in a while when using render props so i can get stuff from context in my lifecycle methods its pretty easy to create a hoc from a render prop so i was wondering how open yall would be to adding a hoc to the new context api we can already do this in userland with a little withcontext helper js function withcontextcontext component return props return contextconsumer context component props contextcontext contextconsumer const appwithcontext withcontextmycontext app it would be useful to have this builtin to the new context api something like js const mycontext reactcreatecontext const appwithcontext mycontextprovideapp the second argument to provide the prop name could default to context anyway just thought id open this up for discussion before making an actual pr that adds this thanks for your consideration edit removed example using thiscontext"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncursor jumps to end of input when onchange doesnt call setstate\nedit im asking for a feature current behaviour an input onchange function that returns a value equalling the prior value causes the cursor to jump to the end of the input this is the same as this comment from formally raised as a feature request repro sandbox that same code javascript import react from react import render from reactdom class input extends reactcomponent state value typeanumber onchange e let nextvalue etargetvalue if 09testnextvalue nextvalue thisstatevalue thissetstate value nextvalue render return input typetext valuethisstatevalue onchangethisonchange renderinput what is the expected behavior id like the cursor not to jump in the special case where the returned changed value is a rejected change ie the noop change i understand fully that react cannot predict cursor position if the value is changed in onchange however i cannot currently find an npm module that allows freelength regex filters vs a fixed length mask or a way to implement a filter myself without the cursor jumping in this case edit since raising i now fully see this as a feature request for handling a special case of a behaviour that indeed is not a bug differently it would be a nice to have as it would allow very straightforward implementation of filters regarding the nonclarity of how to deal with the general case of nonjumping cursors i think a modernized best practice example would be ideal but that discussion still lives at 955 id be totally fine with this issue being closed by assisting instead with the education of handling the general case though this would still be a nice to have for the api if possible"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nallow to specify displayname for createcontext providers and consumers\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug bug what is the current behavior in react tree name of a context must be like its name in code if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below js const mycontext js mycontextconsumer data mycontextconsumer lets have a look at react tree in chrome extentions page here is context not mycontext what is the expected behavior expexted to see mycontext which versions of react and which browser os are affected by this issue did this work in previous versions of react 1632"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndont call on a purecomponent if props are the same\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature what is the current behavior is called on a purecomponent even if the props havent changed if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior as is which versions of react and which browser os are affected by this issue did this work in previous versions of react all i was hoping wouldnt be called on a purecomponent if the props hadnt changed any reason why this shouldntcouldnt be the case"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsupport hydration after html minification\ndo you want to request a feature or report a bug report a bug what is the current behavior reacthydrate replaces the dom after a ssr page is served and two sibling links in the page have the href attributes wrongly set i did a little repl to replicate this behaviour when the server responds the html is correct screen shot 20180404 at 16 08 but right after hydration the first href is changed screen shot 20180404 at 16 08 and whitespace artifacts are added what is the expected behavior the first href should not be changed which versions of react and which browser os are affected by this issue did this work in previous versions of react react v162 chrome 650 macos"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprovide a better error on\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug what is the current behavior if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior which versions of react and which browser os are affected by this issue did this work in previous versions of react"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nissues with\ndo you want to request a feature or report a bug see below what is the current behavior 1 bug inconsistency jsx input typeradio checkedfalse no warning 2 feature request jsx input typeradio checkedtrue onchangeundefined warning failed prop type you provided a checked prop to a form field without an onchange handler this will render a readonly field if the field should be mutable use defaultchecked otherwise set either onchange or readonly 3 bug jsx select valuefoo readonlytrueselect no warning what is the expected behavior 1 passing a falsy value or checked attribute will not trigger a warning but a truthy value does 2 if onchange is passed as undefined or null this should be considered as an acknowledgement and silence the warning i have a case where i split the render method from the component and use it as a preview when the component is interactive i use the component when doing a preview i pass undefined as my change handler a warning is shown to tell me i forgot it but i intended it to be this way 3 going along with 2 i can pass readonlyhandlechange but according to definitelytyped this isnt a valid attribute for select i cant use disabled because it changes the appearance of the field which versions of react and which browser os are affected by this issue did this work in previous versions of react 1620 chrome 65 other a proposed fix would be to change to js if propname in props fixes 1 onchange in props fixes 2 propsreadonly propsdisabled and to js if propname in propspropname fixes 1 onchange in props fixes 2 propsreadonly propsdisabled"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nproduction reconciler instrumentation\napologies if this is documented somewhere but i was unable to find anything related after a pretty exhaustive search of docs code are there any production instrumentation hooks for the reconciler specifically im looking for callbacksevents that would allow me to track overall reconciliation time spans nothing more granular eg equivalent to the react tree reconciliation span as best i can tell there are performancetimings spans reported as of fiber and reactperf prior but those are only enabled in development mode"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndoes react still require nontoplevel submit handler\ndo you want to request a feature or report a bug bug maybe what is the current behavior using nondelegated handler for submit event what is the expected behavior after ie9 at least i know submit event bubbled up which versions of react and which browser os are affected by this issue did this work in previous versions of react 1620"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nextracting a context stack\na useful feature of context is creating a custom stack of things to see what your component is embedded in side i think the primary use case is logging explicitly currently that is pretty expensive to maintain just in case you need it see 12234 as an example we could provide an api that lazily extracts a whole path of contexts from the tree js foocontextprovider valuefoo foocontextprovider valuebar foocontextprovider valuebaz app foocontextprovider foocontextprovider foocontextprovider js class app extends reactcomponent log var stack logtoserverstack foo bar baz render return div onclickthislog it would basically synchronously rerender the shortest path to recreate the context at the time of the call to create the stack lazily cc acdlite"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprovide a way to perform a synchronous render into another root during the commit phase\ndo you want to request a feature or report a bug bug what is the current behavior reentrancy checks prevent synchronous reactdomrender in a nested react component this used to work before react 16 and seems related to this issue about nested reactdom if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below heres a that documents the problem with a simulation of the external dependency where this manifests what is the expected behavior im running into what i think is a similar problem to this with a nested reactdomrender except where the difference is that i dont think we can use portals to address our usecase we have a component which manages the dom tree for all nodes below it outside of react — its a contenteditable node and uses the bestinclass library to manage its children the component looks something like this javascript class prosemirror extends component componentdidmount prosemirror manages the dom for all nodes below thisel setrefel thisel el render return div refthissetref as part of its render cycle our configuration of prosemirror ends up calling javascript to render an isolated child node of prosemirror and wants to be able to immediately afterwards be able to leverage javascript but this piece of the dom is no longer available synchronously and it looks like this is because of the reentrancy change that came about in react 16 portals dont work for us because the site where the reactdomrender is being called isnt itself directly part of the root react tree this is clearer to observe in the the hierarchy is something like prosemirror opaque prosemirror rendering code crucialsubcomponent is there a way to skip these reentrancy checks in these cases where theres an isolated react render happening in a grandchild of a component but where the react tree isnt the immediate parent which versions of react and which browser os are affected by this issue did this work in previous versions of react querying the dom immediately after reactdomrender worked in versions prior to react 16 were excited about the async possibilities for our main react tree but curious if there are workarounds where we can ignore the reentrancy checks for these isolated renders"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd oldprops as additional argument to\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature what is the current behavior only receives the nextprops and previousstate as arguments if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below the deprecated used to allow code like thispropsfoo nextpropsfoo with the new function theres no choice because it is a static method but to constantly copy nextpropsfoo into state in order to access it later this is illustrated in the example posted to twitter by gaearon what is the expected behavior ideally if its not difficult to implement the would also take the current previousold props as an argument something like prevstate prevprops this would eliminate the need to constantly assign props to state purely for comparison purposes a quick look at the source doesnt make it clear to me how easy this would be though which versions of react and which browser os are affected by this issue did this work in previous versions of react 1630"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncan react support feature like keepalive in vue\ni found this issue and sophiebits said that react never reuses an instance after its been unmounted does it means that react will never support feature like keepalive in vue or there is other way to maintain components state"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nhave fragments support\nthe addition of the fragment in 1620 is fantastic and helps keep our html semantic and clean unfortunately there is still no way to inject html without a wrapping tag jsx const html spanhello worldspan div key id html html which will render html divspanhello worldspandiv it would be mostly helpful for rendering html from jsx on the back end rather than in the spa context to me fragment seems to be the ideal candidate to support so that you may inject html without wrapping elements jsx const html spanhello worldspan fragment key id html html would render jsx spanhello worldspan simple obvious and aligned with the current api"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsymbols as keys in children as arrays or iterators\ndo you want to request a feature or report a bug i want to request a feature what is the current behavior using symbols as element keys throws a type error if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below when using keysymbolmykeysymbol we get the following typeerror cannot convert a symbol value to a string at codesandbox what is the expected behavior using symbols as keys should work seamlessly in my opinion element keys are a perfect usecase for symbols which versions of react and which browser os are affected by this issue did this work in previous versions of react using react 1600 and the browsers affected are safari chrome and firefox on osx but im pretty sure this is not browser dependent but a matter of implementation thanks"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd reactcreateref as the migration path for string refs\ncreating this issue to track i intend to close the pr as its outdated but we probably want to turn it into a real rfc and potentially get it in during 16x"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nlifecycle method to build initial state for classes\nfeature request we need to have a way to build the initial state of reactcomponent in case of usage of classes what is the current behavior warning in case thisstate modified in willcomponentmount access to partially constructed object in case of somewhat complex state building logic in the constructor for example if we have a hierarchy of classes with the buildstate method called in the constructor to generate an initial state derived class overrides the buildstate method to have a richer state in result part of the object related to the derived class wont be constructed yet and cant be accessed in the buildstate the buildstate approach is currently used in resub framework what is the expected behavior rather no warning in case of thisstate modification or new lifecycle method which is called right after constructor call which returns the state which versions of react and which browser os are affected by this issue did this work in previous versions of react react 16 is affected"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature request global state at the renderhydrate level\nthis is a feature request it relates to this has been a pain point for me and im sure we can do better the issue how to have some state available to all components without passing everything down on props through the component tree im speaking about global state so why not use context i have a couple of issue with it 1 its not the root components job to receive and disseminate state the root component is just some component it shouldnt care if its root or not maybe you have example using express resrenderhomepagejsx but some other page might just as well have where otherpage has div something homepage div components can be composed however you like they shouldnt care what depth theyre at 2 above is talking about a multipage app the thinking around react seems to be so skewed toward to the special case of single page app spa is sometimes the right choice if youre google maps its clearly right if youre something broader in scope like amazoncom its clearly not the general case is much more interesting to solve 3 having every root component wrapped in some provider that publishes context downwards and every nonroot component wrapped in some receiver higher level component that declares context is just boilerplate its not expressive its bookkeeping 4 alternatives there arent any as far as i know each component only knows about the props and possibly context passed in it doesnt have any handle on data for the current render call simply importing global state through commonjs or es6 modules is impossible on the serverside for anything request scoped like query params route params cookies headers anything generated by middleware based on these things proposal why not just handle global state at a higher level than props passed component to component why not extend reactdomrender to take a 4th argument for global context it would just make everyones life easier dont even worry about changes firing at least as a first version think of it as analogous to express and the req object thats passed around one should always have access to some per request object so many things would be useful to put in there authenticated user geolocation store from redux query and route params etc etc it would look like somediv callback request specific data where request specific data might have things that are truly request specific and also things that are the same across requests the latter can be done with imports but its a bit messy you end up with code like if typeof window undefined client get value from window object else server get value from filesystem or wherever just having global data available to all components in the tree simplifies things a lot dont you think"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd hooks to reactdomserver to support caching\ndo you want to request a feature or report a bug feature what is the current behavior reactdom ssr performance could be improved using serverside cache but currently the reactpartialrenderer is currently not accessible from the reactdom package desired behavior on the server only it would be nice if plugins could be used to improve render performance currently the only way to do this would be to externally maintain a renderer implementation however the reactpartialrenderer already contains all the behavior required to support plugins with a little refactoring ive refactored the reactpartialrenderer and created a proof of concept for supporting plugins for react server side rendering you can see the in this fork its comprised of 3 different commits strict refactoring of reactpartialrenderer the only addition is exporting the reactpartialrenderer from the reactdom server package create the by extending the refactored reactpluginrenderer and introduce a plugin interface proof of concept plugin implementations and application example you can view instructions for running the example in the i understand that exporting reactpartialrenderer exposes the internal api which is far from ideal is there any scenario in which reactpartialrenderer would be made to be accessible from the reactdom package or would a plugin implementation similar to above be required to maintain its own forked reactpartialrenderer maintaining the plugin renderer in its own repo isnt a problem but it would be great if plugins could be used without needing to maintain the core server renderer thanks adam"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nis not available for synthetic events\nin order to call this method youd have to access it via itd be awesome if this was supported on event itself i did see a prior for this but it was for a use case that sip wasnt required for for a specific use case if you want to kill hover events for touch input ontouchstart will trigger onmouseover and cancels that internal cascade"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd a way to opt out of user timing api calls\ndo you want to request a feature or report a bug bug or v16 feature dont know what is the current behavior when building in dev environment performance timeline measures appear by default ie without reactperf query string as in v15 described react1600 if its not a bug then whats the way to disable react perf measures need a way to clear timeline to focus on my own custom perf measures"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nrelease a tool for statistical perf analysis a replacement for reactperf\ndo you want to request a feature or report a bug a feature what is the current behavior na what is the expected behavior its great that react 16 integrates with the timeline in browsers dev tools and that is very helpful in cases where you are trying to fix the performance of a specific thing however i do miss the perf tool from previous versions and could not find any issue tracking a reimplementation of such a tool what was great in the perf tool that is not covered as well with timeline integration easily see which components render needlessly and therefore should be easily eliminated with scu and what impact it will give easily see the collective render time of a component i might for example have a component that renders very fast but which have very many instances and thus contribute to a significant render time anyway give an overview of which components are slow by themselves and which are fast by themselves but render slow components the flamegraph shows this but i find it to specific in some scenarios with too much detail that can distract basically the wasted exclusive and inclusive tables the dom table i feel is much better represented by the timeline integration which versions of react and which browser os are affected by this issue did this work in previous versions of react 16 yes the perf addon in 15 was good"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd code property to\ndo you want to request a feature or report a bug improvement what is the current behavior does not currently support the code property code is nice to have when you want to write keyspecific handling—rather than inputspecific dependent on layout and modifier keys handling what is the expected behavior already exposes a keycode property it should have a code property as well currently if you want to use the keyboardevents code you must access it through nativeevent which versions of react and which browser os are affected by this issue did this work in previous versions of react affects react 16 and earlier i assume"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nasync to allow state update\ndo you want to request a feature or report a bug feature what is the current behavior an almost immediate rerender is due after is called unless says otherwise what is the expected behavior if new props in cause an async call thats soon going to update the state anyway wont it be cool if react might as well wait for that async call to do its thing which calls setstate and do one render instead of two potential solution react can see if returns a promise if it does it defers the rerender until it resolves javascript async const postid nextprops const posttitle await thissetstate posttitle return"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact16 not compatible with x3dom\nthis is both bug feature httpswwwx3domorg i used to be able to use x3dom with react it was great react 15 i was able to use the is property to generate custom elements and custom attributes that could be picked up by x3dom ie shape is rendertrue now with react16 i get many warning messages for all of the custom x3dom tag elements likewise it seems that certain attributes arent getting rendered either for instance if i do x3dom elements like so fontstyle size06 ill get fontstyle output without the size attribute i dont think react should have to know what x3dom tags are nor should they be hardcoded into react there has got to be a way to have react output custom tags without throwing warning messsages why not just reintroduce the is attribute to indicate that its a custom tag with custom attributes"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nloosen up type requirements for event handlers\ndo you want to request a feature or report a bug feature what is the current behavior when adding event handlers it is common practice to do something like js const mybutton canclick onclick div onclickcanclick onclickdiv this was fine in react 15x but in 16 it reports a warning which is technically correct expected onclick listener to be a function instead got a value of boolean type however this now forces you to use the more verbose variant js const mybutton canclick onclick div onclickcanclick onclick onclick undefineddiv what is the expected behavior i think it makes sense to allow null false and undefined in addition to function types for event handlers or just anything falsy although that may be too much to ask i definitely understand the rationale from a type safety perspective but this does make it less pragmatic i am personally a huge fan of how js evaluates null 0 and undefined to false and it reduces the amount of boilerplate needed to conditionally wire up handlers which versions of react and which browser os are affected by this issue did this work in previous versions of react react 16 all browsers this did not emit a warning in react 15 and below"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nproduction check in reacttestrenderer\nwhen upgrading to 1600 from 1561 reacttestrenderer started failing on my tests with the message test renderer is not available in production mode i have in fact been running unit tests using this renderer during my production build im trying to understand why was this restriction introduced i saw the change was made in 9514 but couldnt find any explanation on the pull request or the documentation as to why production mode is now disallowed for this renderer thanks alex"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndid not expect server html to contain the text node due to whitespace in react 16\nwe have updated our react v15 application to v16 everything seems to work fine instead the fact that this error appears warning did not expect server html to contain the text node in div we are using reactdomhydrate and our app was completely ssr ready in v15 ive found an old issue on stackoverflow where someone wrote that this could be a problem with the markup which is send from server client but as far as we can see the html code is the same without any markup problem"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nattach thirdparty tools to monitor component state updates\ndo you want to request a feature or report a bug feature that exists in previous releases of react what is the current behavior feature is not implemented which versions of react and which browser os are affected by this issue did this work in previous versions of react react 16 worked in previous versions hey we would really like to be able to use reactinstrumentation with fiber i have found gaearon s pull request but work on it was stopped would like to know why and if we can pick this up and implement it i have also asked why in the pull request but figured it might get ignored since it is a closed pull request omer"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nselect should warn if value is not available\nimo select valuefoo onchange option valueyesyesoption option valuenonooption select should warn because there is no foo option it should probably also warn if value is not specified because there is no empty option either one could also argue that the change handler should be called with value yes when the component renders and the first option is selected instead of an invalidnonexisting one"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\naccept ref objects as refs\nreason uses first class ocaml refs to store mutable values instead of on this instances these are basically just an object with a mutable contents property these can be updated with callback refs n refcontents n but it would be a nice convenience feature to just have that builtin we could also make these first class objects on isomorphic react js reactcreateref contents null js class foo extends reactcomponent state mydiv reactcreateref componentdidmount if mydivcontents mydivcontentsfocus render return div refthisstatemydiv basically the implementation would just be js if typeof ref function refnewvalue else if typeof ref object refcontents newvalue else if typeof ref string ownerrefsref newvalue this is something that needs to be implemented in the core runtime and not as part of any particular component api since refs cross that boundary cc adamjernst"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nasync toplevel hook before commit\nthis isnt needed for 160 i think were missing a toplevel api if you want to integrate with nonreact code around you in an async way then you probably have some parents around you its not always the case that you want to show those parents before react is done maybe you can hide them and then show them at the callback time however it would be better if you could start building the tree async with react and then get a callback before we trigger lifecycles so that you can insert the tree into the actual dom and do whatever manipulation you need only after that do we trigger the lifecycles that way they will have the css and layout information available to them by virtue of being in the document already i see two possible routes a we just call out for this hook and then commit immediately after b we invoke a callback and pass another function that function when invoked does the actual commit this approach has precedence in the dom with append async and offscreen canvas the second option is probably preferable but we should only do that if we can do it efficiently and cleanly"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature suggestion publish react also as es2015 code\ndo you want to request a feature or report a bug feature what is the current behavior react is published to npm only as es5 code what is the expected behavior publish react also in es2015 with es2015 entry point in the packagejson motivation performance leverage the targeted client native es features its part of the angular 4 package format"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nnicer formatting of ssr validation\nthe new validation in 10026 only issues a warn for the first difference found in a html hydration scenario ideally it should instead queue up all the differences and then at the end commit issue a single warning with a nicely formatted diff 1 instead of warning add these warn to a global buffer array map set whatever 2 inside issue all the currently batched up warnings as a single message 3 format that message in terms of a jsx diff in a nicely formatted way with only the relevant nodes parent and child with changes irrelevant child content can be replaced with ellipsis eg div classnameunchanged div classnamefoo div classnamebar…div span div div span div this strategy wont yield perfect results because if were asynchronously hydrating and it gets interrupted by another tree well flush a warning before the actual hydrating particular tree is flushed so we might show a partial diff in that case this is probably its just a warning"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature request support serverside rendering of nonstandard dom attribute names eg amps propvalue\ndo you want to request a feature or report a bug request a feature i am working on project to build amp page with react server side rendering i am having an issue to add custom attribute to builtin amp element in order to be able to use we need to be able to output “bindings” which are special attributes of the form attribute eg slideselectedslide ampcarousel layoutlayout heightheight widthwidth slideslide ampcarousel here is amp carousel example that work with what is the current behavior parsing error unexpected token fatal which versions of react and which browser os are affected by this issue did this work in previous versions of react all for more information you can read all the discussion in this"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nfeature request rendertypes\ndo you want to request a feature or report a bug request a feature per some discussion today with tomocchino and thejameskyle id like a nonflow mechanism to annotate what types of elements a component expects to render heres some examples with flow types for comparison that i realize may not be currently checked in flow yet jsx function foo yes return yes bar div foorendertypes bar div class bar extends reactcomponent static rendertypes button render return button jsx function foo yes reactelementbar div return yes bar div class bar extends reactcomponent render reactelementbutton return button inside airbnb we have lots of use cases where we have container components in a separate package say a buttonrow and we have intentionally restrictive proptypes on its children prop to only allow a button also in the same package however in an app that consumes this component library package a dev may want to create a specialproductbutton that in turn renders a button however theyre unable to pass it into buttonrow our proptype warnings fail tests even though conceptually it should be permitted having rendertypes would allow us to widen our children proptype to allow for either a button or anything that renders a button which helps us maintain separation of concerns the package doesnt have to know about specialproductbutton to accept it as well as maintain strictness the package doesnt have to allow any wacky element inside buttonrow i imagine the implementation to be 1 when render is called or an sfc is invoked in async rendering itd be when the component resolves i suppose 1 in development only and if rendertypes exists on the component 1 evaluate the equivalent of children renderedvalue children 1 just like proptypes log the error if one is returned cc spicyj"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd reactchildrenfind\ni think a reactchildrenfind method would be really useful in situations where you need to iterate over your children and find just one that satisfies a particular condition im running into this situation more and more often in my react code a few examples in react the switch component iterates over its to figure out which route matches the url in a select component we use in our training we need to iterate over the options to figure out which label we should show in the select box i wonder if there would be any interest from others in seeing something like this"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwarn when static proptypesstatic defaultprops in es6 class is a function\ndo you want to request a feature or report a bug bug what is the current behavior class testwrongproptypes extends component static proptypes return children proptypesstring missing static defaultprops return children default props via static function render return pthispropschildrenp in this example react will silently skip proptypes checking and default props setting for testwrongproptypes component if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via httpsjsfiddlenet or similar template what is the expected behavior i know that in order to work proptypes definition should be static get proptypes or but id like to have warning like is function but should be either property or getter to prevent such errors which versions of react and which browser os are affected by this issue did this work in previous versions of react discovered in react 15x but probably the same behavior will be also in earlier versions"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nrfc add traversal utility to reacttestutils matching totree shape\nproblem the reacttestrenderer now supports a new api which returns an easily traversed tree representing the internal state of the instance and its rendered nodes the existing solution for this in testutils is which traverses the root and lets you provide a test function it will call to reduce a tree based on a predicate the predicate function is passed the public instance for the node the issue with that is that it makes the predicate function polymorphic and requires every consuming utility to check if its being passed a component instance or a dom node solution i propose that we implement a new api similar to that calls the predicate function with the result of calling totree on the internal instance instead of the public instance this would mean the predicate function will always be called with the same data structure a tree node thirdparty traversal utilities can be shared between reacttestrenderer and reacttestutils since they would operate on the same tree structure you could actually assert on functional components which currently have no instance and just call the predicate with null this new api could just be a pure traversal utility leaving it up to the consumer to accumulate results js import renderintodocument traversetree from reactdomtestutils var root var results traversetreeroot node if somepredicatenode resultspushnode implementation with a brief review it looks like we could just export the totree function that is currently inlined in reacttestrenderer and provide a way to change js var publicinst nodestatenode if testpublicinst retpushpublicinst to js var treenode totreenode if testtreenode retpushtreenode cc gaearon bvaughn lelandrichardson"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nexpose devmode warnings in devtools ui\nreact has made recent developer experience improvements to lifecycle error handling and logging errors thrown during render can be recovered from using unstablehandleerror componentdidcatch errors thrown during lifecycle methods are also automatically logged to the console with the component stack location to make them easier to identify see 8785 the team has discussed similar improvements for warnings such as using a yellow box approach to make warnings stand out more in developer mode see prs 7360 and 8861 there has been some pushback though to the idea of react modifying the dom for warning purposes see issue 8784 im not sure how that will play out yet but in the meanwhile could we improve at least some of these use cases by making better use of the devtools for example what if react exposed a new api that allowed associating a warning with one or more components in the devtools panel eg a method that when called recorded the current component stack and notified devtools if present react could use this for things like missing or nonunique keys 3rd party libraries may also benefit from this eg reactvirtualized could use this to warn about missing or incomplete positioning styles for cells heres a rough outline of some of the features components with warnings could be highlighted in some emphasized way eg yellow background in devtools to make them easier to spot a new toolbar option could be added to show all warnings eg filter the tree view to show only components with warnings warning message could be shown inline in the settings panel for the selected component heres a rough mockup screen shot 20170315 at 3 47 31 limitations not everyone uses devtools so this would not help a lot of people this would not address issues like using the development mode of react for production sites thoughts ideas suggestions"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nrfc reactfiberreconciler release artifact\nthis issue is intended to be a discussion for how to distribute the file and dependencies for custom renderers currently firstclass renderers within the react codebasefacebook ecosystem do not have any concerns for this because of haste access to the reactjs build publish tooling within this codebase 3rd party renderers are currently adding reactdom to their dependency list and requiring to build and expose their custom renderer ideally would be distributed with the react package or as a standalone reactfiberreconciler package whether this is at reactreconcilerjs or reactlibreconcilerjs idk i think at the root is better to continue the discouragement of looking in reactlib for anything i understand flat bundles are coming too i don’t know if that should block this or if this could be a flat bundle or any other alternative is this something the team is ready to commit to and support if we came to a decision on approach and i put together a pr related issues 6795 create separate copies of each renderer 5472 include flow type definitions flow type distribution proposal at sebmarkbage spicyj"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprovide a way for external tools to list nodes with event info\ni would like to add react event bubbles to the markup tree of firefox developer tools to do this i need a way to get a list of nodes and their attached event listeners if somebody can provide a way for me to do this it will be added within a day is this possible at the moment and if not what can be done to make this possible"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nrfc idea forcedeepupdate and\njust going to put it out there for feedback motivation subscription management comes with a cost and that eats into the wins of async rendering since it needs to be managed synchronously not just managing the direct subscriptions themselves but managing the dynamic dependency graph so that it can be invalidated meanwhile most of what subscriptions are used for is data that will never update at least in our apps it is a pure loss the use case is when youre connecting to third party systems that arent as easily connected to the top level data tree proposal js thisforcedeepupdate same use case as forceupdate if you are reading from global mutable state for some reason you can use this to bypass in an entire subtree basically rerender everything when combined with fiber this can be a lowpriority update so its not so bad for things that change a lot of things a good example would be changing the locale regardless if you read a global mutable locale like airbnb does or a context locale like yahoo does this lets you change it when you need to without needing to manage subscriptions for all those cases when you dont need it js js class foo extends reactcomponent return scopestore userstore scopeid thispropsuserid render would traverse the subtree and only start rendering if returns true for the arbitrary scope argument this allows for a bit more of a targeted update with some convenience overhead additionally react would cache the pair of scope and components that responded for some number of scopes back if a new component gets mounted with a we might check it against the cache to see if we need to add it to the cache effectively this creates lazy subscriptions the use case is something like typing into an input field that then updates some global store which immediately displays in a completely different place on the page the first character might be a bit slower but still with responsive levels and the subsequent characters are fast to update caveat the major downside of this proposal is that it relies on mutation as we know react doesnt really like mutation for many more reasons than just the effect in fiber for example is that any component that gets a higher priority update will start using the new value components that rely on mutable state effectively become upprioritized which is not good 1 it can temporarily show inconsistent data 2 the point of making this kind of update lower priority is because it is likely to be large larger updates will stall the page if they take the same priority as higher priority updates thereby defeating the benefits of fiber anyway id like to try to come up with a variant of this api that doesnt rely on mutation"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreacttestrenderer custom depth rendering\ndo you want to request a feature or report a bug feature what is the current behavior jsx mycomponentjs import react from react import thirdpartycomponent from thirdpartycomponent function myinternalcomponent return divtestdiv export default function mycomponent return div thirdpartycomponent div testjs import reacttestrenderer from reacttestrenderer import react from react import mycomponent from mycomponentjs const renderer this renders whole tree of dom which is actually expected behaviour the problem is that i dont want render thirdpartycomponent only myinternalcomponent shallow renderer isnt answer because shallow would not render myinternalcomponent at all which is problem because its hard to divide component into smaller internal chunks i have done some work in order to achieve this in 5513 it was fully working patch it was done as part of shallowrenderer but now we have testrenderer besides this patch is pretty old so resolving conflicts would be very hard what is the expected behavior i would love to provide blacklist of components which i dont want to render js import thirdpartycomponent from thirdpartycomponent const renderer mycomponent dontrender thirdpartycomponent this would return jsx js div divtestdiv thirdpartycomponent div so we can test props returned for thirdpartycomponent and internal logic its combine of full and shallow renderer i have some ideas of implementation but i dont want waste my time writing code which wont be marged into master anyway this possibly would allow to resolve"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndoesnt work well if component accepts children\nreacts based performance improvements work great for improving the performance of mediumweight components with large numbers of instances they even work well with event handlers as you can ignore event handler changes and instead pass a locally bound method thatll access thispropson on demand however this all fails apart you start passing react elements to pure components js use strict import react component proptypes from react import reactdom from reactdom import shallowequal from fictional function that works like shallowequal but ignores changes to a list of props passed as the third argument class button extends component static proptypes icon onclick proptypesfunc onclick e thispropsonclicke note doesnt actually work return nextprops onclick render const icon thisprops return button onclickthisonclick icon ref icon thisiconref icon button class icon extends component static proptypes name color proptypesstring return nextprops render const name color thisprops return getsvgiconname color const nilclick reactdomrenderbutton onclick alertclicked iconicon namedone reactdomrenderbutton onclicknilclick iconicon namedone 2nd invovation reactdomrenderbutton onclicknilclick iconicon namecancel 3rd invovation given this sample a button component that expects an icon to be passed as an icon prop and a simple icon both are pure components and button is also coded to not rerender whenonclick is changed pretend that button actually has a heavy render but its props and state dont change frequently on the second invocation icon should not require any prop change or render and button should have its onclick prop changed but not require a render on the third invocation icon should require a render while button itself does not need to render except for the change to icon however in practice button will always rerender including during the second invocation when nothing changes this is because icon will always result in a new instance and will never be the same normally you could work around this within the component itself without telling users they have to store icon in a variable until they think they need to change its props for functions you could pass a function that will use thisprops itself and for objects you can do a deep comparison if you know the structure of the object but for react elements even though allows react to know if the current component has a render dependency on a subcomponent you do not have access to this information so button cannot tell if icon requires a render in practice this can turn out to be a problem when youre writing some libraries rather than an application notably material suffers from this problem in production enhancedswitchs render is not light enhancedswitch is used by radiobutton and checkbox both use a checkedicon and uncheckedicon react element prop you can reasonably have 100 checkboxes on one page even if they were pure they cannot identify whether an icon requires an update as a result a render of the component containing the checkboxes to check a single checkbox will result in the render of all 100 enhancedswitch instances i can think of a few ideas on what type of api could be added to react to solve this issue helper the most obvious api would be a toplevel react function that given the instance context old reactelement and new reactelement would return the result of a components then heavy parent components can use that to implement a that is aware of render dependencies in its children as a bonus theoretically you could temporarily remember this while youre walking the current tree then instead of calling multiple times for every potentially nested component the result is simply that calls are raised up to the highest level where a component is renderdependent on them thispropsicon nextpropsicon however i expect the problem we have with this is that is also responsible for state dependent updates and this is supposed to be a rendered instance not a reactelement instance while you know context from passing the current instance you do not have a reference to the state from either of the props ref based helper the second most obvious api would be a helper that instead uses a ref nextpropsicon the downside to this is that to get a ref for a component you didnt create you inevitably have to use reactcloneelement render passthrough the next idea i had was a render passthrough a way during the render process for a component to say i do not need a renderupdate but these children of mine may which would tell react to skip render and then run on the instances deeper in the tree however those components only know if they need updates if you pass them the new props so a passthrough wont work wed instead need a way to tell react that it should not run render but do pass on an update to a specific component instance nextpropsicon the advantage of this over using is that instead of only allowing medium components wrapping light components to only render when a child requires it we also allow heavy components to never render unless they themselves require it while still allowing them to permit their light children to update partial renders that based renderref only applying updates to a component child feels somewhat awkward and forced though so a more robust idea might be a partial render lifecycle that optionally runs when false and can call for the render of a subtree that belongs to the current component js class heavycomponent extends component ignore icon and children return nextpropstext thispropstext render const text icon children thisprops text return div h2 ref icon thisiconref icon text h2 wrapper refsubtree children wrapper nextstate ref icon thisiconref icon thissubrender thisrefssubtree wrapper refsubtree children wrapper though thissubrender probably has potential for conflicts so i expect the most reactline way to name that would be something like nextelement component which would be invoked using subtree thisrefssubtree the wrapper i used would be a really light component that probably would just render its children its there because should probably not accept dom refs this should be part of react lifecyclewalker not part of client side browser only reactdom like"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nis there a way to let users know which invalid type was returned\nthis is the error message in question labelbutton a valid react element or null must be returned you may have returned undefined an array or some other invalid object not very helpful is it technically possible to show what was returned"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nclean up toplevel event listeners after unmounting all roots\ndo you want to request a feature or report a bug bug maybe intended behaviour what is the current behavior background i have an app that needs to be embedded by other apps other customers the idea being our react app has its javascript loaded in an iframe but the main window hosts dom elements from the customers and our react app that bit works fine as time goes on our react ui is no longer needed and then react root is removed and the iframe destroyed these apps are often long lived so there will be times when the react app needs to appear again and the iframe is recreated and everything reloaded this can and will happen many times goal we would like to not keep the iframe around when its not actually needed but rather recreate just in time when it is needed this app is used by customers and they would like to embed our react app without interference with their app and all its javascript which is why we are doing the iframe thing problem it is evident by watching the chrome dev tools timeline memory graph that memory always increases each time a new iframe is created and the react ui is initd unmounting and destroying the iframe never causes the memory to drop to near original before load value repeating this process multiple times slowly show an increase memory this also causes a more immediate problem in that react is throwing exceptions on every event click type etc because the window of the iframe is now null proof first symptom event exceptions only happens in my app these exceptions only happen in my cant share app i cant repo them but parts of this apply to all react apps please read thru it will all make sense when you get to the end and if you examine my poc destroying the iframe leaves react and its event dispatching system in memory i have a mixture of xtag webcomponents which are used to create the iframe and load the react app after the custom element is used lets call it embedreact the console starts showing exceptions all within react code this is a side effect of the react dispatchevent still being active and trying to do stuff javascript uncaught typeerror cannot read property nodename of null shouldusechangeevent extractevents extractevents handletoplevel handletoplevelimpl perform batchedupdates batchedupdates dispatchevent i know about below where i can disable react i havent actually tried to avoid the exceptions but that would leave the memory leak javascript dispatchevent functiontopleveltype nativeevent if return its rather easy to prove that react remains in memory simply goto the compiled app find the react dispatchevent and insert a consolelog and watch as it continues to print stuff after unmounting the last component even though there are no listeners in my case the exception is caused because all extractevents eventually default to window as the target there are multiple copies of the same basic idea in various react functions where it tries to get a target that it assumes will never be null if one doesnt load react in an iframe then window is always defined javascript var targetnode targetinst window later the shouldusechangeevent tries to read the nodename of the now undefined window because its iframe has been destroyed but that now results in an exception null pointer etc javascript function var nodename elemnodename return nodename select nodename input elemtype file if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via httpsjsfiddlenet or similar template what is the expected behavior there are probably two possible solutions that work in tandem 1 firstly react should provide an api that will remove all its global event listeners naturally it could complain if there are any active components that remain mounted this api may be internalprivate not public if 2 was implemented it might be called something like reactshutdownall because everything is gone the next react render would setup all its globals again 2 react should dispose of all its global event handlers when the last or root component is unmounted this would call the new api mentioned in 1 either option solves my problem where i wish to either let react shutdown gracefully with this in mind i could unmount iframe powered react ui component call reactdisposeglobals mentioned above if unmounting auto calls an internal reactshutdownall then this step is skipped destroy iframe proof 2 goto your compiled out locate the dispatchevent and add a consolelog notice even after the last root container is unmounted stuff will continue to be printed because the event listeners are still active i did a very quick scan of the abstraction around adding listeners and i couldnt see the remove function being stored and then called to cleanup proof 3 look at my last section below where i have a proof of concept form of the popular todomvc react example which versions of react and which browser os are affected by this issue did this work in previous versions of react react 1502 reactdom 1502 reactredux 445 might be useful to know reproducable use case sorry i tried but decided that using the facebook jsfiddle wasnt really a smart thing for the following reasons the compile the jsx content means loading babel etc to compile babel jsfiddle etc too many moving parts its hard to get the root component that is inserted into the output box and its even just too hard to put the jsx compiled output into somewhere for the iframe src to load i have forked the popular todomvc app and added a few minor edits to recreate reload renderunmount x100 destroy everything about the app and try again in a loop separated by a sleep httpstodomvccom todomvc main site todomvc github my fork with comments and snapshots of chrome dev tools timeline memory graph hopefully we can trust the todomvc guys are doing the right thing no dumb memory leaks if you examine it should be obvious the only thing im adding is support for my horrible create app run app renderunmount many times render unmount sleep a bit and then loop again until counter exhausted sorry if this is boring but as a convenience i will list the basic instructions to run the react version of my branch on your local machines 1 clone 2 in the root run gulp to compile everything 3 run something like python m simplehttpserver 4a navigate to 4b navigate to examplesreact corresponds to the distexamplesreact directory that gulp built into my poc supports 3 concepts rerun todomvc over and over again in same window create iframe load todomvc js in the iframe but render to outer window unmount destroy iframe try 20x create custom element webcontainer creates iframe and load todomvc js in the iframe but render to outer window unmount destroy custom element try 20x if you look at my pr against todomvc you will see many helpful pictures with memory leak graphs from chrome dev tools for each of the 3 described scenarios and some commentary"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nexpose react build modeflags\nkittens has expressed concern that people will forget to set the nodeenv when building their react application which will result in babel producing bloated builds due to our new devmode transforms the source and self should never be set in production and having them set on every element would introduce substantial bloat that you wouldnt want in a production environment we probably want to be able to warn when this happens in this case i think we might want to expose reactmode dev or something such that the transform could add runtime checks to verify that react is in dev mode and warn if not i know were thinking about switching to real build flags for the various features and maybe we want to expose all those individual flags anyway opening the issue so we have a place to discuss and track"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nimprove error messages for invalid states\ni think we should create a test suite that throws errors in different lifecycle methods and make sure we have relatively sensible invariants as early as possible preferably with component names 6990 is an example of this but we’ll keep regressing until we actually test for something like this explicitly cc jingc yungsters facebookreactcore"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprovide an optin way to easily manage this in event handlers\ntheres no shortage of places in react where a dev will write something like onclick thissetbookssubjects or alternatively its not ideal to recreate these functions on each render so the alternative would be some form of autobinding in the classs constructor all of which recreate these functions once per instance and require boilerplate id love to see the react team add some way of opting in to having a handler called with the current component set as this by current component i mean the component whose render created the element i dont know what it should be called but for example if it were called ownclick it would look like this button ownclickthisfooclick mebutton and so when that button is clicked foo would be called with the object that owns the render method which rendered the button set as this"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwarn on inline style update with a bad value\nif set an inline style attribute for a component such as backgroundcolor yellow and then update the state with a bad value to make the inline style like this backgroundcolor nonexistcolor this currently takes no effect on the component and the backgroundcolor will remain yellow live example i suppose this is not the correct behavior the old value should be override by new value even the value is nonstandard so it can fallback to use the parent style just like plain html if leave the previous style as is the behavior of component will lose connection with component state the style will become chaotic and unpredictable"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndatalist support\nnot a ton of browser support for this right now but it appears to be on the horizon for webkit right now im not getting any dom events fired from it in chrome wonder if syntheticevent could prollyfill"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nhave react ignore a specific dom element\nas per my chat with gaearon im filing an issue to discuss this further i would like to avoid a specific element that i rendered on the server from beeing further updated by react once it reaches the client one specific use case is rendering ad server tags that are kind of a pain in the ars using things like documentwrite etc i render them using but sometimes when react is doing the reconciliation client side they get rerender so they stop executing now i managed to track down some of these cases by fixing render differences between server and client which would trigger dom patching but it still seems to happen any advice"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd commentsattribute indicating which component was rendered\nas per the discussion today sometimes you are developing on a platform that doesnt have devtools safari etc the problem is that you are looking at a whole pile of markup and cant tell which components rendered it without devtools the output markup is really hard to navigate it would be cool if we had comment nodes or a datareactcomponent attribute that helps users navigate the output these nodes would be rendered only in dev mode or with some flag turned on or something"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nallow specifying multiple fallback values for inline styles eg for vendor prefixing with ssr\nive been using the string hack to override css values in react components for example if you want to have display with different values you do styleobjdisplay webkitboxdisplay mozboxdisplay msflexboxdisplay webkitflexdisplay flex i have an npm module for polyfilling my styles in my react components all of that worked perfectly in v014 no warnings no nothing updated to v150 today and everything is breaking a normally there are deprecation warnings i didnt notice any warnings on that change b in the changelog i cannot see anything related to that to understand what changed am i missing something"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nadd support for css variables in style attributes\ncss variables is now supported in chromium which we use for rendering they enable us to write cleaner more flexible code sadly i cannot seem to use them in react without resorting to various tricks ideally i would like to be able to use them like div stylecolor hotpink which would make the variable available inside the scope of the div i am able to add them using the following syntax div stylecolor hotpink but then they arent updated if i try assigning a new value—which ruins much of the point of using a variable i am able to add and remove them using reactdom and hotpink but that gets it out of sync with the dom updates in addition to not being pretty if there are any questions on the usefulness of css variables ill be more than happy to explain"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsupport dom nodes as children\nit would be nice to be able to do the equivalent of it seems entirely doable now with our new fancy renderer i think obviously it wouldnt be supported for ssr though so you would have to provide your own fallback if necessary"}, {"role": "assistant", "content": "feature"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion about reactfragment and\nreact version 1700 reactfragment why not property"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug data is losing during page refresh in reactjsredux tried using reduxpersist and localstorage but not working\nin our were built in django and through this we are getting the authorization details and this was stored as reduxdata and was used in the rest of the application which is built in reactthere was no refresh issue during that timeevenif the store was getting disapper but we are getting it backnowwe shifted all that we done in django into react and used the same redux storage method in loginbut we are facing the data losage during refreshstore is not getting restore and we are having 403 status for 2 apis for getting the user detailsthis was not happening in former case we used reduxpersist package to avoid this data losage and also tried using localstorage persisting facing the issue storejs import createstore applymiddleware compose from redux import thunk from reduxthunk import rootreducer from reducers import persiststore persistreducer from reduxpersist import storage from const persistconfig key root storage const composeenhancers compose const persistedreducer const store const persistor persiststorestore export default store export persistor actionjs import axios from axios import setprofile setfeaturetoggles from actiontypes import clientrequestdata from config const redirecttologin delete if 1 windowlocationhref accountslogin export const fetchuserprofile dispatch axios clientrequestdata clientrequestdata thenresp dispatch type setprofile payload respdata catche todo figure out what do do here if eresponsestatus 403 redirecttologin export const fetchfeaturetoggles dispatch axios clientrequestdata clientrequestdata thenresp dispatch type setfeaturetoggles payload respdata catche todo figure out what do do here if eresponsestatus 403 redirecttologin import setfeaturetoggles from actiontypes const intialstate export default state intialstate action switch actiontype case setfeaturetoggles return actionpayload default return state 2userprofilejs import setprofile from actiontypes const intialstate export default state action switch actiontype case setprofile return actionpayload default return state appjs import react useeffect suspense from react import connect from reactredux import cssbaseline from import themeprovider from materialuistyles import muithemeprovider from import provider from reactredux import browserrouter switch route from reactrouterdom import theme from thememuitheme import i18n import home from screenshome import as actions from reduxactions import userservice from servicesuserservice import baseurl from config import login from login import signup from signup import logout from logout import resetpassword from resetpassword import resetsuccess from resetsuccess import store from reduxstore const app props const userprofile featuretoggles fetchuserprofile fetchfeaturetoggles props useeffect fetchuserprofile fetchfeaturetoggles return suspense fallbackspanspan browserrouter switch route exact path render return userprofile null featuretoggles null login home switch browserrouter suspense const mapstatetoprops state userprofile stateuserprofile featuretoggles statefeaturetoggles export default actionsapp indexjs import promisefinally from import react suspense from react import reactdom from reactdom import indexcss import cssbaseline from import themeprovider from materialuistyles import muithemeprovider from import provider from reactredux import as serviceworker from serviceworker import app from app import theme from thememuitheme import storepersistor from reduxstore import i18n import home from screenshome import login from login import signup from signup import logout from logout import persistgate from promisefinallyshim reactdomrender provider storestore persistgate loadingnull persistorpersistor muithemeprovider themetheme themeprovider themetheme cssbaseline suspense app suspense themeprovider muithemeprovider persistgate provider also tried with localstorage localstoragejsin redux export const loadstate try const serializedstate if serializedstate null return undefined return catch err return undefined export const savestate state try const serializesstate jsonstringifystate serializesstate catch err consolelogerr corresponding storejs import createstore applymiddleware compose from redux import thunk from reduxthunk import rootreducer from reducers import from reduxpersist import storage from import fetchfeaturetoggles from actions import loadstatesavestate from localstorage import throttle from lodash const persistconfig key root storage const composeenhancers compose const persistedstate loadstate const persistedreducer const store 1000 const persistor persiststorestore export default store export persistor"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact developer tools\ni successfully installed the extensions but i am not able to see the the news tabs components and react"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion starttransition behavior\nim very sorry that im using the issue tracker to ask this question but i think others might ask the same question after reading i dont have commenting rights js function handleinputchangee const input etargetvalue setinputvalueinput starttransition setsearchqueryinput what happens if the user types ab ie js pseudocode representing the first event handler triggered by keystroke a setinputvaluea starttransition setsearchquerya pseudocode representing the second event handler triggered by keystroke b setinputvalueab starttransition setsearchqueryab from my understanding setinputvaluea and setinputvalueab will batch generating a single rerender the callback setsearchquerya passed to the first starttransition will be cancelled and only the second callback setsearchqueryab passed to the second starttransition will be executed ie js pseudocode representing the final logic after keystrokes a and b setinputvaluea will batch with setinputvalueab starttransition setsearchquerya noop this callback will be cancelled setinputvalueab starttransition setsearchqueryab am i correct i think this question is important because if the first callback passed to starttransition really gets cancelled and i try to do more work inside it i should have in mind that the additional work will not happen cc gaearon acdlite"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nexperimental createroot method not available in react 17\ni am using react and reactdom v1702 and i was trying to use the unstablecreateroot method to render my app but looks like that method is not even present in react v1702 can someone comment if this is expected or not thanks arpit"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug strict mode initial state changes and usememo with dependency doesnt seem to be recomputed\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed react version 1702 i ran in to this interesting dynamic that i cannot explain today 1 the code sets some initial state which is a random number and logs this initial value 2 it converts the number to a string using usememo which logs the number it is converting and is dependant on that number not the string and 3 when the component is mounted i force a rerender by changing a boolean state once the result is that the initial value of the number is changed and the log is output so you see the number being set twice to two different values this only happens in strictmode it is surprising is it expected you also see the usememo being computed once only the first time so seemingly it does not recompute a new string value but the output in the html is the correct and shows the stringified value of the second number so what is happening here is the console log swallowed is usememo behaving correctly and more importantly is the initialvalue of usestate supposed to change like that steps to reproduce typescript export default function app const rand usestatemathrandom const setstate usestatefalse consolelognumber rand useeffect setstatetrue const text usememo consolelogcomputing text from rand return randtostring rand return div classnameapp h1rand randh1 h1text texth1 div and wrap your app in strictmode link to code example the current behavior initial state computed twice usememo seemingly not run twice the expected behavior initial state computed once or usememo runs twice"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion is there any way to retrieve react devtool performance data\nhi guys i want to get react devtool performanceprofiler results probably a json data and send to our local server i read through the reactdevtoolscore but unfortunately do to get any clue how to do this"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion about getting the latest state value in the concurrent mode\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed react version 1701 steps to reproduce 1 enable strict mode for checking for possible issues in the future concurrent mode 2 create the below component and run the code import usecallback usestate from react const example onincrement const count setcount usestate0 const incrementhandler usecallback onincrementcount count 1 is count guaranteed to be the latest state here due to including count in the usecallback dependency array setcountcount count 1 count onincrement return spancountspan button const parent example incrementedcount alert count before incrementing currentcount after increment incrementedcount export default parent your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react issues without reproduction steps or code examples may be immediately closed as not actionable link to code example please provide a codesandbox a link to a repository on github or provide a minimal code example that reproduces the problem you may provide a screenshot of the application if you think it is relevant to your bug report here are some tips for providing a minimal example the current behavior in this simple example everything seems to be fine but in a more complicated situation full of event handlers that change the count or async callbacks that may change the count like data fetching callbacks the count value is not guaranteed to be the latest state and if i change the incrementhandler function like below const incrementhandler usecallback setcountcount onincrementcount count 1 return count 1 count onincrement then the onincrement will run twice in development while in strict mode and may run twice in production in concurrent mode according to documentation and if you suggest running the onincrement in useeffect callback with count and onincrement in effects dependencies array how can i know that the onclick event of the increment button has caused the effect and not another event for example decrement or anything else you may say by setting another state that shows what is responsible for the effect then i may need the previous state which unlike this example may be impossible to recalculate you may suggest using a ref for storing the previous state count then i will end up with one extra state or ref for storing what is responsible for the effect to run one extra ref for storing the previous state and a useeffect hook to run the onincrement click event handler the expected behavior providing a second callback argument to setstate like in class components that will run after this state update so we can save the current and next state and use it in the callback like below const incrementhandler usecallback let prevcount nextcount setcount count prevcount count nextcount count 1 return nextcount onincrementprevcount nextcount onincrement in my humble opinion this doesnt collide with the async nature of setcount and can be implemented unlike belowgetstate proposals that if it will be asynchronous it may not return the desired state and if it will be synchronous it will not return the latest state too because setstate is not executed yet wrong solution const count setcount getcount usestate0 const incrementhandler usecallback setcountcount count 1 const currentcount getcount const nextcount currentcount 1 nextcount onincrement or providing a third array to usecallback for accessing the latest state can not be implemented due to the same problem with getstate and async nature of setstate please tell me if im missing something or ive misunderstood things if not please tell me if there is a simple solution for this scenario or similar ones or tell me the best practices for running a callback or event handler with the latest state thank you"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug it seems that the default value in functional react component gets updated after render\nplease provide a clear and concise description of what the bug is include screenshots if needed please test using the latest version of the relevant react packages to make sure your issue has not already been fixed it seems that the default value in functional react component gets updated after render react version 1701 steps to reproduce i created a question on stackoverflow but also repeat it here const mycomponent initialise data with a random value const data setdata reactusestate const data samplesizerange5 3 print data on initialisation consoleloginit data in default data return data reactuseeffect print data after the component is rendered consoleloginit data after render data return divdatadiv the output in console is log init data in default – 0 3 1 3 log init data after render – 2 1 3 3 my understanding is that before the component is rendered the function under usestate is called the value returned by the function is assigned to data and the data values is used to render the component on the screen the function under usestate is called only once and we never call setdata so the value should be the same maybe i miss something your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react issues without reproduction steps or code examples may be immediately closed as not actionable link to code example please provide a codesandbox a link to a repository on github or provide a minimal code example that reproduces the problem you may provide a screenshot of the application if you think it is relevant to your bug report here are some tips for providing a minimal example the current behavior the output in console before and after render is different the expected behavior the output in console before and after render should be the same"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndev tools chrome extension only works properly in incognito window\nhi folks at some point win the last 5 months or so the dev tools chrome extension stopped working properly for me in nonincognito chrome windows its a bit hard to explain but ill try when i use the extension react components show up but they are basically just high level wrapper components that we use in our app for example i cannot inspect a button component a container component an input component etc in the ui this issue disappears in incognito mode however and i can use the extension just fine chrome version 8704280141 extension version 4101 react version 16131 ive been unable to find anyone else with this issue please let me know if there is other information i can provide you with thank you"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion cm mode and useeffect cleanups\nsince cm mode now runs useeffects cleanups async are we still guaranteed that theyll resolve in order by that i mean if a component gets cleanup rerendered and cleaned up again that the first cleanup will resolve before the second componenta 1 thrown away componenta 2 thrown away will that 2 effectively await on the 1 to cleanup first"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsome questions about lanes\nfirst of all thank you for reading and patience ive been studying the principle of react lanes recently and its implementation is interesting to me but i still dont know what the specific problems it solves this constraint was designed before suspense was a thing and it made some sense in that world when all your work is cpu bound theres not much reason to work on tasks in any order other than by their priority but when you introduce tasks that are iobound ie suspense you can have a scenario where a higher priority iobound task blocks a lowerpriority cpubound task from completing from the explanation of acdlite it seems to solve the blocking problem of io operation on low priority tasks but i couldnt figure out what asynchronous io blocked？ js a suspense b susepsne c based on the above example before lanes where is blocked and where is the problem solved after lanes or do you have a better demo to explain for developers the new technology related information is too little binary is also very abstract thank you again for your patience"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwhy does react warn about multiple renderers using the same context provider\ni am currently developing a web app that uses both and both of these libraries use reactreconciler and have a custom renderer i also use redux in my project so they share the same context in the two libraries it displays a warning on console after every redux state updating but everything works well both renderers can trigger an update i want to know if there is any risk in doing this or is this just a false warning react version 16131 steps to reproduce 1 using multiple react renderers 2 using the same context provider between that react renderers link to code example the current behavior it will throw a warning message after every state updating warning detected multiple renderers concurrently rendering the same context provider this is currently unsupported but everything works well both renderers can trigger an update the expected behavior dont show any warning"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nshowing an array in string format in ui\nin js array rendered with in between each element eg piyush sinha piyushsinha but in react array rendered without in between each element eg piyush sinha piyushsinha"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nmicro react apps need to render another react app into existing react app\nhi i need to render another react app ie app2 into existing react app ie app1 on run time i have hosted my app2 on a remote server i read assetmanifestjson file from it and on runtime i append those js chunks in our head tag this overall code i call from my app1 to load my app2 on runtime but i am not able to trigger app2 how should i triggered app2 component inside app1 component my application have lot of other internal dependencies such redux reduxthunk etc"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtool api request add api for customize renderer inspect element\nim wirte a custimse renderer for render element in canvaslike reactpixi i want intergrate with react dev tool i can hightlight element when click element in react dev tool compoent panel use code ts eleinfo eleinfo const id rendererid eleinfo const renderer rendererid const nodelist as sprite customise render engin hightlight code i want hightlight ele when mouse move in canvas i can use find node fiber id i can use bridge send hightlint msg to backend just like the code but i cant get store object and get enugh infomation send to backend maybe dev tool can expose proper api for this function"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nselenium integration\nhello im not sure if this is an issue but i would like to know a little more about how react developer tools work i want to get reacts props with selenium in order to make easier the debugging of a website id be thankful with any kind of help you can give me best regards"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact hooks will render multiple times after await\nconst html sethtml usestate const script setscript usestate const update script html setscriptscript sethtmlhtml updatea b the above code works fine react hooks will render once and combine setscript sethtml const html sethtml usestate const script setscript usestate const update async script html await new promiseresolve settimeoutresolve 10 setscriptscript sethtmlhtml updatea b the above code doesnt work anymore react hooks will render twice and it doesnt combine setscript sethtml i can change to the code to const state setstate usestate html script const update async script html await new promiseresolve settimeoutresolve 10 setstate script html updatea b the above code only renders once but it has a new bug the cursor in the textarea where script and html go will move to the end of the textarea instead of staying at where it is"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nextention react non définie sur chrome\nreact developer tools 460 google chrome version 8003987149 loutil de développement react est inactif sur la console google chrome"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion why not usecallback always return static value without deps\ntsx function userefcallbackt extends args any voidcallback t const ref usereftcallback refcurrent callback return any args parameterst return refcurrentapplythis args as t i think userefcallback is safe to replace usecallback in any code and its better than usecallback because it will never cause recalculation"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion how to remove dynamic children from parent state\nim using react hook usecontext i have two identical components siblings each that use the same context that is a list scenario 1 the first sibling is created calls usecontext and then pushes something into the list 2 the second sibling is then created using the same usecontext and then pushes something into the list issue the second sibling has the current state of list which has two items but the first sibling state is not updated with the second item that was pushed in by the second sibling expected that each component that is using the same usecontext will be updated amongst all components that use the same context is this a bug or am i misusing this any help or guidance is appreciated personbowing"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwebpack cant find reactdomcreateroot\nhi im kinda in doubt if this is an error or is just me doing something wrong i am trying the new react experimental in a very simple existing app i have although i had installed the react experimental versions in my packagejson it seems it doesnt recognize reactdomcreateroot when i try to run my project i receive the error message from the console uncaught typeerror is not a function at mainchunkjs2437 at webpackrequire runtimebundlejs786 at fn runtimebundlejs151 at object0 mainchunkjs4324 at webpackrequire runtimebundlejs786 at checkdeferredmodules runtimebundlejs46 at as push runtimebundlejs33 at mainchunkjs1 this only happens when i try using reactdomcreateroot using reactdomrender everything works perfectly any idea why this is happening dependencies chalk 300 compression 174 express 4171 morgan 191 uuid 340 devdependencies babelcli 784 babelcore 784 babelnode 784 774 774 774 774 774 775 777 774 774 774 babelpresetenv 784 babelpresetreact 774 783 hotloaderreactdom 16110 511 testinglibraryreact 940 autoprefixer 974 babeleslint 1100beta2 babeljest 2510 babelloader 806 230 1107 230 520 cleanwebpackplugin 300 connectedreactrouter 661 copywebpackplugin 511 corejs 362 csshotloader 144 cssloader 341 deepfreeze 001 eslint 680 eslintloader 303 eslintpluginbabel 530 eslintpluginimport 2201 eslintpluginjsxa11y 623 eslintpluginramda 251 eslintpluginreact 7183 230 113 eslintwatch 601 fileloader 502 0131 history 4101 htmlwebpackplugin 320 immer 534 jest 2510 jeststyledcomponents 700 lodash 41715 minicssextractplugin 090 moment 2240 nock 1171 normalizr 350 npmrunall 415 open 702 503 pm2 423 postcssflexbugsfixes 420 postcssloader 300 proptypes 1572 ramda 0270 react reactdom 060 reacthotloader 41219 reactis 16120 reactredux 713 reactrouter 512 reactrouterdom 512 reacttestrenderer 16120 redux 405 reduxactions 265 2138 reduxlogger 306 reduxsaga 113 reduxsagatestplan 400rc3 regeneratorruntime 0133 reselect 400 sourcemaploader 024 styleloader 113 styledcomponents 501 stylelint 1300 200 300 1900 011 060 stylelintorder 400 190 210 threadloader 213 typescript 375 urlloader 300 webpack 4414 webpackdevmiddleware 372 webpackhotmiddleware 2250 220 webpackmerge 422 webpackpwamanifest 411 workboxwebpackplugin 500"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug nested setstate and are they ignored\nnested setstate and are them ignored react version 1612 steps to reproduce open profile after click you will see 3 commit it seems that even if we use nested setstates called on do not get batched"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwhile using useref some data has been updated by context value from reducers when the context value was updated from some other user event variable used with useref also updated then how to use instance variables in hooks\nconst props const state dispatch usecontextstore const draftdata useref useeffect if draftdatacurrent useeffect debugger draftdatacurrent when value in store context changes useeffect of draftdatacurrent also called please suggest hwo to resolve"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion just for my app test thanks\npolicecarlight this issue tracker is not for questions policecarlight as it happens support requests that are created as issues are likely to be closed we want to make sure you are able to find the help you seek please take a look at the following resources coding questions if you have a coding question related to react and react dom it might be better suited for stack overflow its a great place to browse through frequent questions about using react as well as ask for help with specific questions talk to other react developers there are many online forums which are a great place for discussion about best practices and application architecture as well as the future of react proposals if youd like to discuss topics related to the future of react or would like to propose a new feature or change before sending a pull request please check out the discussions and proposals repository"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion react apollo hooks fails after adding reactnative to monorepo\ni am trying to create a react web app and reactnative app with monorepo by using yarn workspaces so i created web and controllers and it works fine i was able to make graphql queries to my apolloexpress server but after adding reactnative application i see this enter image description here11 1 i am 100 that i am not breaking any react hooks rules because before adding reactnative application it was work fine is there any way how can i solve it apollo controller import usequery from apolloreacthooks import gql from graphqltag export const usehelloquery usequery gql hello react component function test const data usehelloquery return textawesoetext before adding reactnative it was exactly same"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion react lib context overrides app context\nhi i believe that this can potentially be an issue though im not sure i was wondering about good patterns concerning the react context lets get a public library for example reactintl that exposes a provider intlprovider lets create a library barlib that uses reactintl to manage translations internally and that also exposes a provider now lets imagine i create a web app and use both barlib and reactintl i dont expect the barlib to ever override my reactintl context because im not aware it uses internally the reactintl lib but the barlib can accidentally override the reactintl context this kinda breaks the isolation of libs imo i see several solutions dont use an other lib context in the barlib pretty extreme check that there is not already an intl context in the barlib if so merge the context values im not convinced with either solutions what do you guys think about it"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion why cannt i set echarts instance using usestate\ncoding questions i try to store the echart instance using usestate but after setinstance instance is always undefined const instance setinstance usestateecharts undefinedundefined const chartinstance setinstanceprev consolelogprev instance prev first time undefined then echarts instance return prev chartinstance consoleloginstance instance chartinstance instance is always undefined"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nhelpwhen i use reactcreateelement directly and how to pack the component\nhello all i was met a problem when i published a react component i need to help and discuss with you all i am going to write a component to load react component from cdn and make it like a wrapper component jsx import react component from react import scriptjs from scriptjs const devscript const prodscript class phoenixheaderwrapper extends component constructorprops superprops thistype null thisscripturl propsscripturl propsenv prod devscript prodscript thisstate cmp null componentdidmount thistype windowphoenixheader const scripturl otherprops thisprops if thistype consoleerrorload component failed return const cmp otherprops this is point thissetstate cmp render const cmp thisstate return cmp scripturl env prod export default phoenixheaderwrapper and then i do it just like do a normal react component that i was set the webpack config like below js phoenixheader output publicpath filename phoenixheaderjs path pathsappbuild library phoenixheader librarytarget commonjs2 libraryexport default mode production externals react commonjs react commonjs2 react amd react root react reactdom commonjs reactdom commonjs2 reactdom amd reactdom root reactdom and then i run the npm run build npm publish to publish it in my own object which use the phoenixheader component as a npm package jsx appjsx import react from react import phoenixheader from phoenixheader import appcss function app return div classnameapp phoenixheader header classnameappheader p edit codesrcappjscode and save to reload p a classnameapplink hrefhttpsreactjsorg targetblank relnoopener noreferrer learn react a header div export default app after npm start it show me a error that it is my confusion is why createelement not in this scope so i try to make react set into global js windowreact react yes its work for me but someone would like to tell me why need to make react set into global and am i need to build this wrapper component which do not external the react when i was build lets discuss or give me more suggest about this wrapper component please foldedhands"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nrendering react component on server to take a screenshot of it\nmy react application has a list of to do lists like this img width1082 altfigmacanvases replace the figma canvas preview images with todo lists above in the list of todo lists id like to include a preview of each list as well as its name heres what i thought of to achieve this whenever a todo list is updated run a aws lambda nodejs environment job which generates html for the todo list serverside using then serve that html locally visit the page using puppeteer and take a screenshot of the page however this seems like a lot of work is there an easier way of achieving this is there anything in the steps above that wont work ive looked at repng 1 so far but it hasnt worked for the components i tested it with 1"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ni cant get the latest status value in the initialization method\ni try to get the latest state value in the initialization method but the result is not satisfactory。 all this happens in function components。 1react version is 16120； 2reactdom version is 16120； this is my demo code import from react const app button click const btnclick consoleloginitbutton getting state isnowstate cant get now state all is init value init a button const inittitle return button const title settitle usestate now state const nowstate setnowstate usestate0 consolelognow state isnowstate useeffect settitleinittitle return title button 1change now statebutton export default app"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ntypescriptis there any way to define the state variables when using functional component\nnote if the issue is about documentation or the website please file it at if there is a lot of state variables i guess it is hard to get a whole picture the state variables verse class components do you want to request a feature or report a bug what is the current behavior if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior which versions of react and which browser os are affected by this issue did this work in previous versions of react"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nis executed after setstate 13015\nideally should not be called due to current components setstate but it is behaving so can someone explain couldnt find solution in"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwhy only one component can be render at root div\ni called two render methods to same root div renderdomrender navigation root renderdomrender app root and what i get rendered on my screen is only a app component just want to know that the one render method override the previous render method"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nbug react table element type is invalid expected a string for builtin components or a classfunction for composite components but got undefined\ndo you want to request a feature or report a bug bug what is the current behavior hello i am new in react and i am trying to create a simple react table to display data from db with login for user authentication until i added the login it worked momentally it still throws the same mistake no matter what none of the existing solutions helped me i tried to repair imports and exports i reinstalled nodejs reinstalled nodemoduls first i verify the user by logging in to redirect me to the records page after verification verification is ok but then it crashes if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below edit login password admin admin edit which versions of react and which browser os are affected by this issue did this work in previous versions of react nodejs version v8100 npm version 6133 ubuntuchrome please give me any advice thank you in advance"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nhow do suspense and subscriptions interact\ndo you want to request a feature or report a bug ask a question what is the current behavior with suspense a component throws a promise when it encounters something thats not ready however our companys data fetching is subscriptionoriented at a very high level the following happens 1 component renders and calls usefooid name amount discounts 2 internally the hook adds a callback to the fooloader which is responsible for batching and sending async requests the callback will invoke the setter for a usestate inside the hook to force a rerender of the consuming component 3 the hook returns a remotedatapickfoo name amount which could contain the data if it was locally available or is just a constant that says i havent asked for this data yet 4 when the data becomes available or the request for the data fails the fooloader invokes the hookpassedin callback method which triggers the rerender which presents the new component state at no point in there does the component have a promise as a result im not sure its possible for it to throw anything its depending on the usestate inside usefoo to trigger rerender when data is available but if we throw then that never happens and we wouldnt ever complete throwing a promise from inside the hook doesnt seem right as it would be very difficult to combine multiple data dependencies in a single component the only alternative seems to be a pretty sizable plumbing change to return a promise instead of the loading state constant but that seems to force a lot of allocations and boilerplate code to handle the maybe not ready the first time case note posting in response to this by gaearon"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwhy include refs as a feature seems broken and unnecessary\nrefs never seem to work is this a broken feature why not remove them and just let people use like normal people also what does this mean function components cannot have refs did you mean to use reactforwardref"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools component filter does not work with location\ndo you want to request a feature or report a bug report a bug what is the current behavior in devtools when a component filter is added with field set to location and regex set to nothing is filtered out btw no documentation in this subject is available anywhere what is the expected behavior at least some components be filtered out it would also be awesome if the location was shown somewhere for the selected component so that users can know what kind of regex they should put together which versions of react and which browser os are affected by this issue did this work in previous versions of react react devtools 420 on firefox 6903"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwhy is useeffect hook not activating when a component is reloaded after previously throwing an error\ni am learning react and redux within a typescript environment i have managed to implement a container that dispatches a fetch action and subscribes to corresponding fetch success and error state notifications from a redux store the source code is listed below container typescript import react useeffect from react import connect from reactredux import grid from materialuicoregrid import gridspacing from materialuicoregrid import course from import coursemodels from reduxfeaturescourse import courseselectors from reduxfeaturescourse import fetchcoursesasync from import rootstate from reduxtypes type errorreport haserror boolean error error type stateprops isloading boolean courses coursemodelscourse error errorreport redux dispatch and state mappings const dispatchprops fetchcourses const mapstatetoprops state rootstate stateprops isloading courses error component property type definitions type props returntypetypeof mapstatetoprops typeof dispatchprops courselist component const courselist courses error fetchcourses isloading propas jsxelement fetch course action on mount useeffect consolelogcourselist fetching courses fetchcourses fetchcourses if isloading return ploadingp if error errorhaserror errorerror throw errorerror if throw an error then encapsulating error boundary catches and displays however when the container is loaded again via clicking on a navbar link the useeffect action does not trigger alternatively if the error is rendered inside the container then the useeffect hook is still activated if the container is loaded again eg via clicking on a navbar link return null 2p return div style margintop 20 padding 30 grid container spacing2 as gridspacing justifycenter coursesmapelement grid item keyelementcourseid course courseelement grid grid div exports export default connect mapstatetoprops dispatchprops courselist if i throw an error within the container then the encapsulating error boundary catches and displays it however when the container is reloaded via clicking on a navbar link the useeffect action does not trigger subsequently the fetchcourses action is not dispatched why is the useeffect hook not triggered on second load after it previously threw an error my errorboundary component includes a home button for navigating to however after clicking home if i then click on link to display my courselist container the errorboundary is again displayed i do not see the console log message displayed from useeffect when navigating back to courses shouldnt this recreate the courselist container is this not happening because the error was thrown in render previously so the container is being reused what is best practice for resetting a component that threw an error for surrounding errorboundary"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nutilize suspense to express app init loader\nwith concurrent mode getting finalized i went to try to solve an old problem i have the app needs to run a series of init steps before it can do anything viable each steps depends on the previous one this is expressed as nested components the fairly elaborate animated logo is shown for that process but its being restarted for each step and the experience is not that nice ive prepared a demo with some experiments the first one thats active initially is what we currently have the second is what we would like to have but with less naive coding of decreasing counter the last one is my attempt to use suspense but i definitely missing something out here because it behaves very oddly and i cannot seem to figure out why i wonder if the new usetransition should be used somehow or whats going on here"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nweird behavior with functional components and usestate a bug or another rule\nnote if the issue is about documentation or the website please file it at react 1690 sample code javascript import react from react import reactdom from reactdom function optionone return divblue pilldiv const optiontwo reactmemofunction optiontwo return divred pilldiv function app const option setoption reactusestatenull return div div button onebutton button twobutton div option option div const rootelement reactdomrenderapp rootelement well the expected behavior was option one wasnt suppose to throw an error setstate in class components didnt mind if a key value was a pure functional component or a class component even but it seams the usestate hook is sensitive to the value passed using the setter if its another functional component it throws a confusing error worst if the pure functional component passed to setvlaue of usestate hook uses hooks of its own then you get multiple misleading hooks errors to debug so is the usestate hook working like its suppose to a rule not to pass a pure functional component as a value to the setvalue of the usestate hook or a bug"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ni was trying to pass through hook effect and the codes used are declared no where like chatapi\njs import react usestate useeffect from react function friendstatusprops const isonline setisonline usestatenull function useeffect handlestatuschange return handlestatuschange if isonline null return loading return isonline online offline"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwhy does parents componentdidmount gets called first then childs\ni thought it was always the case that first childs componentdidmount would be called and then parents however in this example first parents componentdidmount is called then childs check the logs this happens after i use this in child export default compose withstylesstyles withwidth child does anyone have explanation why this happens"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nread latest state value in event handler\ni have this question i could have asked on stack overflow but i think it is more suitable for people from react team or more experienced users so i will give it a try to ask it here imagine i have event handler below where i want to read latest state value and do something with it however not do a new setstate onclick let data thisstatedata apimakerequesturl data here1 dan abramov says it is safe to read state in event handler in the sense it will be up to date however he says this applies to react 16 otherwise he suggests to use functional setstate to get current state i have question what if i want to read latest state value in event handler however such that it works also in later react versions 17 without hooks one option imho would be to use functional setstate but what if like in the beginning of question i said i dont want to setstate just read the state value and do something with it like network request so using functional setstate wouldnt be right for me as it would force me to update state right or i could return empty object from functional setstate to avoid updating state and put the network request code inside it like this onclick thissetstateps using this form only to read current state in event handler which works for 16 and onwards versions probably but this breaks purity of this function apimakerequesturl psdata return but then i would violate that the function passed to functional setstate must be pure is there a solution to the question i asked 1"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools component tree navigation\ndo you want to request a feature or report a bug feature what is the current behavior where is no way to collapseexpand component tree or it subtrees if i pick element with select element button i got all the tree expanded not the only one subtree where selected element came fromprobably bug and i dont found way to collapse tree so if you pick something from page your component tree is basically is always expanded on all levels maybe we can have selected row context menu like the one in chrome devtools with options to collapseexpand also i guess it maybe good place to add"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nthere is no rendered by section in my extension\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug what is the current behavior if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior which versions of react and which browser os are affected by this issue did this work in previous versions of react"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreact devtools always launches in chrome\nhi i have the extension installed on both chrome and firefox my default browser is firefox each time i try to debug a react native app remotely it launches chrome to use the debugger there how do i change the default browser for devtools to firefox"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nlimitations of context api compared to legacy implementation\nthis isnt technically a bug but a limitation of the new context api implementation and also a question on whether this should be fixed by react or if i should implement a custom inhouse solution instead i have a fairly edgy usecase with a component library that provides several parentchild components eg tabs accordions etc this looks like a standard context usecase so far however the library has to work in a pluginbased environment meaning the parent and child components are rendered by two completely independent apps host app and plugins respectively example jsx accordion provided by host app provided by separate plugin accordionitem labelitem accordion thus two separate instances of the component library are created one for the host app and one in the plugin scope but they still have to communicate with each other behind the scenes while keeping it transparent to the user this worked seamlessly with the legacy context api but now with the new one it breaks that is because reactcreatecontext returns an object that now has to be explicitly shared between the components by means of an import but because of the decoupled architecture of the app and multiple instance of the library being used this seems impossible to do as stated in the docs the legacy context api is deprecated and will be removed in future versions of react 17 so id like to avoid being stuck on react 16 when that happens"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nerror message when calling workcommit in commit phase\nthis was me just toying around with unstable apis i dont know what these can be used for just tried to make sense of them from their names do you want to request a feature or report a bug error message of batchcommit is confusing what is the current behavior i was experimenting with the apis and just tried to piece together what goes where while looking through the source i found that the work returned from createroot has a parameter called oncommit for me this implied its called after the commit which doesnt seem to be however given the code below i get uncaught invariant violation workcommit cannot commit while already rendering this likely means you attempted to commit from inside a lifecycle method js function app return div classnameapp h1hello codesandboxh1 h2start editing to see some magic happenh2 div const rootelement const root rootrenderapp then const batch rootcreatebatch batchrenderapp bad batchcommit settimeout good batchcommit 0 batchthen good batchcommit three things i noticed 1 seems like i need to call batchcommit after the batch is complete changing it to batchthen good batchcommit got rid of the error but i noticed that the original code is used throughout the internal tests in fact moving createbatch and batchcommit the batch well after long timeout the initial rootrender call seemed to allow sync batchrender batchcommit 2 lifecycle should be replaced with something different before these apis get stable since we try to get away from this mental model for example applies setstate in componentdidmount synchronously in a could be converted to a sync test and still pass while i wouldve expected can defer a commit by batching to fail with the invariant violation from above 3 not all lifecycles are during rendering as far as i know componentdidupdate is called during commit if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior im basically asking when its safe to call batchcommit during render phase during commit phase outside of these phases eg in some oncomplete callback which versions of react and which browser os are affected by this issue did this work in previous versions of react reactdom1690"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndevtools v4 breadcrumbs are removed\nrequest for feature the older devtools used to show a breadcrumbscomponent hierarchy at the bottom it is really useful to navigate the parent component i couldnt find it on the new devtool did we remove it any reason to remove it will we add it back"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwhy does devtool chrome extension need access to history\ni woke up today and the devtool extension for chrome asked for additional permissions more specifically access to history i couldnt find any explanations or reference in the changelog so i opened this issue"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsuspense concurrent mode immediately shows fallback when updated from onchange\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug reporting a bug or at least trying to understand some spooky behavior ghost what is the current behavior i have a simple component which reads from a toy suspenseenabled cache the dummy cache simply waits 100ms before responding to anything the cache key is based on some component state managed with the usestate hook this component is wrapped with suspense and rendered in a react root with concurrent mode enabled javascript function myapp let text settext reactusestatestuff return div data button onclicke settextbananasupdate text from buttonbutton input typetext valuetext onchangee settextetargetvalue div fallbackdivcause i aint no fallaback divdiv myapp reactsuspense the component has a text field whose value is set to the current cache key with an onchange handler that updates the usestate hook when the text changes it also has a button which updates the state to some fixed string asdf when clicked clicking the button does what i would expect— the page doesnt respond for a fraction of a second while the data is being fetched and then updates with a view of the loaded data editing the text however for instance typing a single letter in the field immediately causes the fallback ui to load and unfocuses the text input this happens even if the settimeout is changed to 0ms or or a setimmediate polyfill rather than directly calling settext within the onchange handler— if i call it within a settimeout 0 it behaves the way i would expect ie without unfocusing the field and loading fallback if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem what is the expected behavior i would expect that it shouldnt really matter whether im updating state from an onchange versus an onclick i would expect that the fallback ui doesnt show up until its max duration is met which versions of react and which browser os are affected by this issue did this work in previous versions of react im using react 1686 i tested it on chrome 75 on macos 1014"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncant call hooks on component returned from function\nwrapping a component in a function returning the component tldr javascript export function home return function const items setitems usestate return divnothingdiv const root root results in the following error react hook usestate cannot be called inside a callback react hooks must be called in a react function component or a custom react hook function however this works javascript export function home const items setitems usestate return divnothingdiv const root root"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nuseeffect for synchronizing state and props\nhi i have a recurring scenario that i’ve been struggling with since the good old days of and now i’ve pretty much run into the same issue with hooks so i was hoping i could get some guidance as to what the idiomatic way of solving this and similar cases in react is problem description starting point i have a list of items every item has an edit button next to it clicking it opens an “editor” where one can change all the fields and either confirm or cancel confirming would send an api call to save the data but this part is not relevant to the problem i am having the “parent” component would render the list with the edit buttons and have an itemunderedit property that would be null from the start clicking on “edit” for a specific item would set the itemunderedit to the clicked item here is the full example with all 3 solutions on codesandbox solution 1 make the “editor” component stateless and controlled it takes in change handlers for every field as props with the parent tracking every change this solution appeals to me since i like pure stateful components that are a onetoone mapping of props to html they are simple to reason about etc etc this kind of goes against the commonly heard “keep your state close to where it is used” advice which also seems reasonable since i don’t really need to know in the parent what the user is typing i am only interested to know when they are done at the end this stateless solution also introduces a lot of props since i need one event handler per field onnamechanged ondescriptionchanged in the example but it could as well be 10 fields which is a lot of props solution 2 make the “editor” component stateful and only get an event when editing is done onconfirmitemtosave or oncancel this seems like the “react” way and is in line with the advice of keeping state close to where it is used since i am only interested to know when the user clicks confirm a stateful “blackbox”component that tracks its own state seems reasonable in order to achieve this however i need to copy my props to the state which according to gaearon is a bad idea const name setname const description setdescription moreover this solution is buggy from the start since clicking on edit for a different item doesn’t “resync” the props with the state it only works if i close the editor and then reopen it which brings us to solution 3 solution 3 this one has been one of my biggest painpoints with stateful components in react which is why i prefer stateless components with a state container but those i widely demonized nowadays so i am yet again trying to understand the idiomatic react way of doing this the “old” ways were to sync in and later with now i can do this with useeffect where i specify propsitem as the “dependency” since i want to run it when the item changes useeffect if propsitemname name setnamepropsitemname if propsitemdescription description propsitem this seems to work as expected but i get the linter warning react hook useeffect has missing dependencies description and name either include them or remove the dependency array obviously if i were to add those to the dependency list i wouldn’t be able to change anything in the inputs so how come i get this warning summary this is a question in two parts first one about an idiomatic solution in react as well as feedback to the react team this scenario is simple and common but it’s difficult to know how to implement correctly and safely in a consistent way lifting state up and making the problematic component stateless is good advice that solves the problem but every time it seems like a “temporary” solution it also leads to painful refactoring every time something has to be moved around the component tree so relying on it in the long run is extremely brittle the second part of the question is whether the solution with useeffect is viable at all and in this case why do i get the linter warning clearly i want to run it only when a certain prop changes is there an edgecase where this would result in an unexpected bug"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nstatic does not works same as\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug bug what is the current behavior static is not a replacement for if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior which versions of react and which browser os are affected by this issue did this work in previous versions of react 16 hi im trying to implement which will be displayed when a user save an item stating item saved successfully below is my code im using which is depreciated i tried static but it didnt work how can i removed assuming the close button shouldnt be in parent componentwhichever is calling jsfiddle working example requirement on click of the button show notificationcard on click on close hide notificationcard jsx class notification extends reactcomponent constructorprops superprops thisstate open true thissetstate open propsshow 8000 handleclick thissetstate open false componentdidmount 8000 render if thisstateopen return null return div br divitem saved successfullydiv div classnameclsbtn onclick thishandleclick 10006 div div class test extends reactcomponent handleclick thissetstate show true render return div button notification showtrue div reactdomrendertest nameworld"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ndeclarative vs imperative coding style using hooks\nif this should be asked on stack overflow instead please let me know and feel free to close the issue consider a component that fetches some data in a custom hook saves the fetched data in a state hook and notifies the user that data has been fetched using a prop callback notifying the user can be done imperatively js function componentprops const data setdata usestatenull useapiapidata thensetdata thenpropsonfetched return datatoelementsdata or declaratively using an effect hook js function componentprops const data setdata usestatenull useapiapidata thensetdata useeffect if data propsonfetched data return datatoelementsdata react seems to promote a declarative approach but what ive found is that when components grow large and complex using declarative effect hooks makes the flow of data and actions quite hard to follow if youre not careful a lot of things start to depend on a lot of other things and the predicted results become nonintuitive and hard to wrap your head around i would like to know other peoples opinions on this matter and whether or not an imperative approach might sometimes be better"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nhow to test multiple state changes with act\ndo you want to request a feature or report a bug bug what is the current behavior with the new act function im unsure how to test state transitions that occur during an event handler processing for example if i have this handler that is called on form submission const issubmitting setissubmitting usestatefalse const handlesubmit async setissubmittingtrue await fetcher setissubmittingfalse then i want to be able to test that issubmitting state is indeed set to true before fetcher is called due to the nature of act i believe it defers all state changes until after its provided function has been run im not sure that this is currently possible previously ive been testing using await new promisesettimeout to flush the current runtime task queue which works fine for this use case i have found a way to make this work without triggering the act warning but it feels like a hack i have to wrap act around my expectation not the submit itdisplays indicator when form is submitting async await actasync ive provided this test in a repo together with a couple of other tests which complete the feature see the link below if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior theres a way for me to test this which doesnt feel like a hack which versions of react and which browser os are affected by this issue did this work in previous versions of react 1690alpha0"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion about owneralternate\nit seems that in react16 every react element children contains cyclic property so it is easy to cause maximum call stack exceeded error when developer compares propschildren in deep waylike this caused bugs for community libraries like i am extremely curious about why react has owneralternate and what it stands for as it is named as “owner” could it be better if we make “owner” not enumerable i tried to search source code and but still can’t find any clue thanks in advance"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nusestate causing children to remount\nbug what is the current behavior i have a hook that is supposed to call a callback after a settimeout when i render a list of children with this hook the callback behaves differently when its in a function component with usestate than it does if its in a class component to see this in action checkout the codesandbox below the demo should show children components being added to the page and then after 2 seconds the child is mounted it should be removed both the examples use the same child components only difference is the parent component being a class vs functional component what is the expected behavior the function component should behave like the class component which versions of react and which browser os are affected by this issue did this work in previous versions of react react v1686 latest chrome unsure if this worked with previous versions of hooks"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nissues\ndo you want to request a feature or report a bug bug what is the current behavior onanimationend creates unexpected behavior in the following example i am creating a simple notification component from an array each element in the array is used to generate a html element with a class that has a css animation on it the generated div has an onanimationend binding which will remove them from the array of notifications the basic idea is that the notification will fade away using a css animation and then be removed from the array or alternatively i am also allowing the user to manually click on the notification element to remove it the interesting bug is as follows if you add two notifications the first one will trigger its onanimationend and remove itself the remaining notification will suddenly jump to the end of its css animation and never trigger its own onanimationend even more curiously if you add four notifications exactly two of them will have the above bug while the other two function properly in fact exactly half of the added elements will trigger onanimationend properly while the other half will not the onclick functionality to remove the notifications from the array does not cause any unexpected behavior and thus i am forced to conclude that the fault lies with onanimationend since they both run the exact same function if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below click the add notification button then press it again before the first element has faded 7 seconds you will notice that the second notification element gets fast forwarded to the end of its animation when the first notification is removed by its onanimationend trigger the second notification will then be stuck there never triggering its own onanimationend what is the expected behavior onanimationend should trigger for each element in the loop properly which versions of react and which browser os are affected by this issue did this work in previous versions of react current version of 1686 displays this behavior"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nuseeffect how to solve conditional paging list\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug bug what is the current behavior useeffect how to solve conditional paging list 1 reset the page number to 1 when the condition changes 2 request to return the current page and keep the current state if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior properly handle paging and conditions which versions of react and which browser os are affected by this issue did this work in previous versions of react 168 previously treated in class form"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nmimic componentdidmount but with hooks\nwe are trying to use hooks and we want to mimic componentdidmount but our eslint is responding with react hook reactuseeffect has a missing dependency checkuser either include it or remove the dependency array if we add checkuser to the dependency in the useeffect we get the checkuser function makes the dependencies of useeffect hook change on every render move it inside the useeffect callback alternatively wrap the checkuser definition into its own usecallback hook if we change the checkuser to use usecallback eslint is responding with react hook reactusecallback has a missing dependency handleuserstate either include it or remove the dependency array what is the correct way to solve this or should we ignore the warnings javascript function some code function checkuser const response someexternalfunction reactuseeffect checkuser run once"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nwhy function as child is not considered as children\nafter digging deeper with this i have found function as a child is not being considered as children take this example class countexpression extends reactcomponent render const children consolelogchildren return countexpression one two pstill this will be ignored as child whyp pthis will be included in array thats finep countexpression so i would like know why is it so is it a bug or an expected behavior"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\n× maximum update depth exceeded in controled way\ndo you want to request a feature or report a bug maybe bug what is the current behavior my case is that i want to update state n times by adding different types of fields to the state and then render them every updating of domadding new field i have to check whether i should do something more by checking the hight of added elements for example add a break between elements fields are represented by the tree structure of data so i created the class which helps me with going through the tree of fields and i keep it in the class property i know how many times i have to modify the dom so it will be a fully controlled way of state update and it will finish after all fields are added to dom but before i render all fields i am getting the error maximum update depth exceeded do you know how i can handle with such a problem i found a solution by adding settimeout on the way but i am not sure that is the clean solutioncommented code is it ok that i keep in component class property more complex class to manage structure of data i am providing a simple example in codepage which shows the problem and throw the error"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nshould setting state inside discrete events cause cleanup to run\nthis bug is pretty confusing i think it happens because fn scheduled by setintervalfn 0 jumps in front of the running effect cleanup caused by setrunningfalse so the interval still fires overwriting setlapse0 that happened during the event with its setlapsesomevalue this reminds me of the issue described in or at least a part of it in fact this problem exists even for regular react keystrokes and other “discrete” events the solution to that would be to flush passive effects before we get a discrete event but here it seems like this wouldn’t be sufficient because the effect flips as a result of the click not before it so should setstate inside a discrete event also flush passive effect seems like not that would defeat the purpose of delaying them so this is working as designed and the fix is just uselayouteffect when the timing matters or the raf solution"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nuselayouteffect in ssr\nhi i do not understand the situation with this hook a bit i use this hook to perform the animation synchronously with the state update if i use useeffect then i have jumps in the animation because the animation library does not have time to start also the documentation states that uselayouteffect runs on the same phase as componentdidmount that is on the client side and here my server issues complaints to me about my code why is that originally posted by dimensi in"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nhooks usestate oneoff callbacks\ndo you want to request a feature or report a bug question feature ive been trying to handle a case where i need to execute a piece of code right after the state is set at a particular place in the code i do understand im supposed to use useeffect to respond to changes in state like so javascript const val setval usestatenull useeffect handle changes to val here val but the problem is it will run on all changes made to val anywhere in the code without the second argument of setval being a callback thatll run after the state is set how can i execute something after a specific setval function call sets the state"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nprop reassignment in components\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug bug what is the current behavior prop reassignment in components if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below 1 have a parent component that passes a prop to a child 2 have a child assign the prop to the state default 3 unpack the state value and use apush to alter it 4 watch in horror as both the prop and the state changes check childjs what is the expected behavior props should not be reassignable within mounted components which versions of react and which browser os are affected by this issue did this work in previous versions of react all browsers all oss react 1670"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nunder what circumstances unstableshouldyield will return true？\nin schedulerjs function unstableshouldyield return currentdidtimeout firstcallbacknode null shouldyieldtohost unstableshouldyield return true when currentdidtimeout is false and shouldyieldtohost return true but why shouldyieldtohost function return framedeadline getcurrenttime shouldyieldtohost return true means theres no time left in this idle period currentdidtimeout is false means the schedule is not timeout what relationship between them why does unstableshouldyield depend on them"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nact cannot detect secondary updates\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug bug what is the current behavior if a component performs a second non user triggered update act cannot detect it and warns about the update for example a button is clicked and updates its text after a second the button resets and its text reverts to its original state the reproduction is a bit contrived but demonstrates the issue what is the expected behavior the test runs without warning about being wrapped in act which versions of react and which browser os are affected by this issue did this work in previous versions of react react react dom 1680"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nunable to use usecontext hook inline in contextprovider\ndo you want to request a feature or report a bug not sure if it is a bug or a feature yet this relates to hooks it could also be that this is all expected behaviour and one of the workarounds mentioned is required what is the current behavior i have a hook that depends on the usecontext hook using it as follows works perfectly const myhookedcomponent const contextvalue return do something with contextvalue const return democontextprovider myhookedcomponent democontextprovider what if i want to use the getcontext hook inline in the same component that declares the democontextprovider const const contextvalue of course this fails due to the context hierarchy return democontextprovider do something with contextvalue democontextprovider i seem to be unable to get this working please note i have a very good reason for solving my issue with context and not passing props the implementation i show above looks trivial and dumb but it is the simplest way to illustrate what the use case is in my implementation the provider sits in a complex component that does a lot of data management which i really want to happen at this level the usual way to use this will be the first working version i noted above it is only in the case where the user would want to use the hook inline inside the provider i have searched for a couple of hours and tried various configurations without success so my apologies if this is a duplicate of another issue what is the expected behavior any method to consume context inline in the provider using the same reusable hook without having to revert back to render props i know i can solve this with render props but i am trying to convert an implementation using render props to hooks i also know i can hoist the context provider higher up but in my implementation it would quadruple the code complexity to develop and maintain while introducing extra complexity into the user interface also by extracting the body inside the provider to a new component i can also solve this but ideally i would not like to have a user do this for this use case"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nreactrouter cant pass hooks\nthis is actually an issue of reactrouter but since its the major routing lib i want to make you aware that there are issues when you want to pass custom hooks via props through your component tree since routing with reactrouter is a regular use case and react hooks is an easyelegant way to manage state through the app they should work together otherwise react hooks is about creating hooks limited to just one component and you cannot share statehooks componentwide maybe i didnt get something right and there is a way"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nhow will react solve nested contexts\njs context1provider valuevalue1 context2provider valuevalue2 context3provider valuevalue3 context4provider valuevalue4 context5provider valuevalue5 context5provider context4provider context3provider context2provider context1provider js context1consumer value1 context2consumer value2 context3consumer value3 context4consumer value4 context5consumer value5 null context5consumer context4consumer context3consumer context2consumer context1consumer"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nunable to catch error emitted in componentdidmount\ndo you want to request a feature or report a bug bug report what is the current behavior error boundary handles error emitted in componentdidmount and somewhy rethrows it javascript class errorboundary extends reactcomponent constructorprops superprops thisstate error null errorinfo null errorinfo thissetstate error error errorinfo errorinfo render if thisstateerrorinfo return divive handled an errordiv return thispropschildren class mycomponent extends reactcomponent componentdidmount thissetstate throw new errorthis error somewhy was rethrown render return divthis component is awesomediv what is the expected behavior it should not rethrow the error which versions of react and which browser os are affected by this issue did this work in previous versions of react react 1670 os win 10 x64 browser chromium 7103578"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nusecallbackuseeffect support custom comparator\ncurrently we can pass an array as second argument when using usecallback or useeffect like below js usecallback dostha b a b how to do deep equal if a is an object the problem is it only compare array items with it there any way to compare complex object support custom comparator as third argument looks not bad js usecallback dostha b complexobject item previousitem custom compare logic return true false here"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsetstate hook inside useeffect can cause unavoidable warning cant perform a react state update\nbug what is the current behavior example clicking on ok button cause warning cant perform a react state update on an unmounted component the problem that unsubscribe is called during b event setvisiblev false call see logs set visible before unsubscribe warning cant perform a react state update on an unmounted component this is a noop but it indicates a memory leak in your application to fix cancel all subscriptions and asynchronous tasks in a useeffect cleanup function in child created by holder set visible after in our case we have this even without raf call but on transitionend dom event its occurred randomly and rare in our codebase as transitionend event should be called exactly at needed time but example showed what happens seems like it occurred only if you have a setstate call during useeffect callback like setrefreshv v 1 inside provided code after rewriting our codebase to avoid setstate calls in useeffect the error has gone code javascript import react from react import reactdom from reactdom import mitt from mitt const emitter mitt const child const visible setvisible reactusereducers a a true reactuseeffect const handle consolelogset visible before setvisiblev false this call causes unsubscribe and warning about state consolelogset visible after emitteronb handle return emitteroffb handle return divvisible h1child texth1div const holder const refresh setrefresh reactusestate0 const visible reactusereftrue reactuseeffect if refresh 1 visiblecurrent false setrefreshv v 1 this state change from effect caused problems const handle setrefreshv v 1 emitterona handle return emitteroffa handle return divvisiblecurrent child div function app return div holder button onclick emitteremita emitteremitb ok button div const rootelement reactdomrenderapp rootelement what is the expected behavior do not provide warning if unsubscription is called during setstate call which versions of react and which browser os are affected by this issue did this work in previous versions of react react 1670alpha2"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nis userhostile\nso i think as designed turns out to be userhostile the short summary is that it makes the pattern described in the docs impossible for nontrivial cases imagine implementing an hoc that listens to change events on a datasource but where a simple shallowequal on the resultant state isnt sufficient to prevent rendering ie what if you need more complex logic to determine if new data from the datasource should be applied in my case i have a datasource that doesnt guarantee that it will give out objects of the same identity so a check will always return false and cause a rerender but i can do a little bookkeeping on the side and determine whether the data is actually new and should therefore be loaded into state this leads to some problems 1 because is static its not possible to store some internal bookkeeping data on the component instance that gets used to determine whether to query the datasource worst case this bookkeeping information could be stuffed in the state object but thats unnecessarily constraining and a bit ugly from a code organization perspective 2 more importantly its not possible to determine why is being called is it because of a props change or is it because of a change event firing on the datasource this matters because if props have changed data must be fetched and the component rerendered unconditionally but if the props havent changed then its possible all the data loaded is the same as last time and so render can be skipped heres an example using the deprecated api thats no longer possible lightly edited from the hoc example i mention above function datasource getdatafunc return class extends reactpurecomponent componentdidmount subscribe to changes componentwillunmount clean up listener unconditionally update state and rerender since the props changed const possiblynewdata props this remember some metadata about what we fetched for next time thisbookkeeping handlechange update component state whenever the data source changes const possiblynewdata thisprops this the datasource had updated data in it so rerender remember some metadata about what we fetched for next time thisbookkeeping else no new data was fetched so dont update state and dont rerender do nothing… render component datathisstate notice that the behavior is different between and handlechange theres no way to make that distinction with the new api"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncases where hooks dont currently provide a good answer vs hoc\nunsure if this is the right place so trying it out ive noticed that the new react hooks feature is aiming at providing an alternative composition pattern to hoc and render functions but i believe that many of the use cases solved by hoc at the framework level cannot currently be addressed by the new hooks api specifically there is not way to incorporate react hooks with reactmemo unless i am incorrect this means that any system that would like to implement optimisations based on external context such as the reactredux connect function that uses mapstatetoprops to implement an efficient will still need to rely on a hocrenderprop to automate this optimisation the reason i am bringing this up is because one of the main benefits stated in the documentation is to reduce framework level use of hoc that pollute the tree of which the reactredux connect hoc is probably the most prevalent use case additionally redux and useredux are specifically brought up as an exemplary use case although with the current system it will cause large optimisation issues since with no optimised every connected component will rerender on every state change although this might fit into the documentation repo this is a discussion opinion and i do not feel it is a mistake that i should report but rather a discussion on importance an example solution for this could be if there was a way to use contexts in reactmemo which unless im incorrect only have access to props and prevprops"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nnpmcreatereactclass no way to implement\nthere seems to be no way to implement class methods such as and a few others am i overlooking something there is no mention of it here either"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nelement attributes be removed silently in frameset tag\ndo you want to request a feature or report a bug bug what is the current behavior in some historical reason i am still using obsolete tag frameset in my project and when i render my component which includes frameset tag in react some attributes are ignored like rows cols could anyone tell me why and how to solve it by no hacking way thx input javascript export default class obsoleteelment extends reactcomponent render return html head meta httpequivcontenttype contenttexthtml charsetutf8 titleold pagetitle head frameset idframecontainer rows60 frameborder0 border0 cols18011 frameset html output javascript html head meta httpequivcontenttype contenttexthtml charsetutf8 titleold pagetitle head frameset idframecontainer frameborder0 border0 frameset html expect javascript html head meta httpequivcontenttype contenttexthtml charsetutf8 titleold pagetitle head frameset idframecontainer rows60 frameborder0 border0 cols18011 frameset html which versions of react and which browser os are affected by this issue did this work in previous versions of react react version node environment os"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\naccess react component underlying dom tree\ndo you want to request a feature or report a bug feature what is the current behavior form component has form field children input checkbox etc that are validated against some custom rules when form is submitted validation works fine what is the expected behavior if the form is invalid i would like to scroll the page to the first invalid element after the form is submitted but unfortunately components do not expose the underlying dom three except via the fiber object and i cannot get the ref of any component which makes scrolling not possible since i dont have the dom reference i am trying to avoid ref forwarding on form field components because i would like the form to handle all validation related code for encapsulation purposes and in case i want to publish this as a library for instance which versions of react and which browser os are affected by this issue did this work in previous versions of react react 1640 is there any way to achieve this"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion on reconciliation\ni think i understood reconciliation in react however there is one thing i would like to clarify lets say on first render we render ul lidukeli key 0 livillanovali key 1 ul and on next render ul liconnecticutli key 0 lidukeli key 1 livillanovali key 2 ul if i understood reconciliation correctly on the second render react will check that types eg li and keys of first two items from first and second render match hence it will add only the new item with key 2 to the new output hence generate following result ul lidukeli key 0 livillanovali key 1 livillanovali key 2 ul however i think this is not what react will generate and it seems then there is some issue with my understanding especially the bold part in the previous paragraph can someone explain what i missed in my understanding"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nget keys in reactreconciler\ni am struggling to implement reusable views on mobile platforms and to make it i need to get key values explicitly set and generated in reactreconciler to match two different view trees somewhere outside react is there a way to achieve this thanks"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nhow map render an array of elements\nwhat is the current behavior react16 support return array components for example render return 《li》1《li》 《li》2《li》 《li》3《li》 export default arraydemo i want to map it with reactchildrenmap for example import arraydemo from xxxxxx index return 《col span6》item《col》 but arraydemo has become a single element reactchildrentoarray got 0 only what is the expected behavior i expected since react can return array how can i map it for sometimes i want to wrap each element in array which versions of react and which browser os are affected by this issue did this work in previous versions of react 164 or am i missing something important thx a lot"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\navoid reconciliation alternative component interface\nhello i want to ask a question about a way to avoid reconciliation process today i can see the following process 1 component wants to rerender 2 component render method provides new virtual dom 3 some react diff library tries to find some nonoptimal way to morph old virtual dom into new one please fix me if i am wrong i am not familiar with react codebase i can see an information in you don’t have to worry about exactly what changes on every update but your solution has complexity about on or even worse so user should care about what changes sometimes when user knows what changed he will be able to provide olog n or even o1 solution for example i am working with huge data list and i am receiving information from websocket about how to morph my list appendprepend remove swap items etc i dont want to render huge component list and run reconciliation process for each mutation i can tell virtual dom how to morph efficiently is there a way for user to provide morph method i can imagine some api like render is not defined morphcomponent if componentappenditem else item key 5 do you have any plans to implement it thank you please feel free to ask any questions"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncomponentwillupdate discussion\nnote if the issue is about documentation or the website please file it at do you want to request a feature or report a bug feature componentwillupdate discussion what is the current behavior the current behavior calls the function before rerendering the render target however there is no indication for when the rerender method should be called if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem your bug will get fixed much faster if we can run your code and it doesnt have dependencies other than react paste the link to your jsfiddle or codesandbox example below what is the expected behavior the expected behavior should call the function before rerendering the render target if there is no returned conditional statement and if there is true should trigger the rerender and false should not which versions of react and which browser os are affected by this issue did this work in previous versions of react 1640 i have a few questions before i try to solve this problem and it gets rejected im assuming that the team has decided to move in the direction of removing willupdates from react all together and have labeled them unsafe ive seen a lot of issues with those functionalities before as well i was curious if providing a conditional statement inside those functions would satisfy the unexpected renders does trigger when to call these functions however in those functions that will run before the render can always be controlled with a conditional statement of its own im getting comfortable with the code base however im curious if the team is removing that functionality all together and using the static function instead has a react lover it is a little confusing and may break a lot of legacy code when updating versions i believe that may solve the problem of unexpected renders after a will change lifecycle event i was curious if that was the case and removing will lifecycles is the next steps for react then how will the did lifecycles work instead i love react and im just curious about the future for react as a whole id love to tackle any bugs or feature requests when i have time i will be writing clean code and create tests for new features or bugs as well"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsuspense timeout expiration and siblings rendering issues\ndo you want to request a feature or report a bug bug what is the current behavior code for reproducing is ive also deployed an example to zeit now this is a basic example of using react suspense and simple cache provider postponing text rendering and showing loading spinners when its necessary i can see my use of timeout doesnt really care about ms im passing — it always become expired right after the render you can open a page and the loading bar appears immediately despite 1000ms delay that it has there is content that is placed next to an async component the one thats going to be suspended looking at react suspense tests it is assumed that sibling elements can be rendered in any way what is the expected behavior timeout component only shows placehold when expired sibling content is shown even if an async component was suspended i built sources for react reactdom and simplecacheprovider from the current master updating enablesuspense flag i also used unstableasyncmode but it didnt seem to make any difference i overall was really satisfied with this feature i hope i did the code correctly so it shows the real bug"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nuse and set a components state within setinterval function\nthis is a question so i apologize if this isnt the best place to ask im trying to work with a components internal state within a setinterval function and i know there are some asynchronous problems i need to be aware of i also know that i can pass setstate a function which would help me protect against async problems but i cant because i need to use the changed state within the setinterval function is what im doing safe or should i be working a different way around this problem ive seen the following that nearly answers my question and am having trouble visualizing adapting this or maybe the behavior i have is fine stackoverflow sectiontimerhandler const elapsedsectiontimems 1000 do some stuff with elapsedsectiontimems restartsectiontimer if 0 1000 thissetstate elapsedsectiontimems 0 or would something like the following be bettersafer even though im using 1000 earlier in the function assessmentstate return elapsedsectiontimems 1000"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncontext api bitmask related questions\nim playing with context api bitmask feature to bail out unwanted rerender i have a dynamic model a json object as context value by dynamic i meant the number of keys and structure of the json object is unknown but when the json object changed i know which key is changed it seems difficult to turn the unknown keys to static predefined bitmasks but i thought such use case is very common and the bailout feature should handle it easily by just matching the key also i notice default changedbits and observedbits is maxsigned31bitint does this mean it has a limitation up to 31 type of context change"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nquestion context provider state initialisation\nconsider a component wrapping a context provider js class valuewrapper extends reactcomponent constructorprops superprops thisstate value null setvalue thissetvalue setvalue value thissetstate value render contextprovider valuethisstate thispropschildren contextprovider a consumer then might want to set a default value when it is first mounted the only way i can see to do this using the new api is to check for an existing value on first render js class valueupdater extends reactcomponent state inputvalue 0 handleinputchange e thissetstate inputvalue etargetvalue render contextconsumer value setvalue if value return div input typetext valuevalue button onclick valuebutton div contextconsumer but this seems to break the golden rule of updating state in the render method as this would immediately cause a rerender ideally i would be able to call the setvalue from the context in the componentdidmount method of the valueupdater component but with context as a render prop thats not possible as far as i can tell the docs suggest passing props down to another component js render contextconsumer value setvalue valueupdaterinput setvalue setvalue value value contextconsumer but if i tried to do the initialisation in the valueupdaterinput components componentdidmount method it would be called on every render surely as valueupdaterinput would be rerendered each time is there a better pattern than this or am i trying to use context inappropriately"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nis there a way to access new context api within componentdidmount\nwe are building a react mapbox gl module and we use clone and inject props today we were looking into using the 1620 context api but i saw that it will have a new one on 1630 but i can’t seem to find a way to read context details on componentdidmount lifecycle which makes sense for me to use on the map implementation is there a way around this"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\npotential future bug in geteventkey for edge with synthetic event normalization\nbug current behavior react currently normalizes keyboard events crossbrowser by falling back on the native keyboardeventkeycode property and using a dictionary object to normalize the key as noted in the source geteventkey is used for normalization of deprecated html5 key values edge currently does not implement the correct key values and this normalization will fall back to keyboardeventkeycode keyboardeventkeycode is deprecated and may be dropped at any time microsoft as per have fixed this issue but it has not yet been released to insider preview releases this means there is the potential for the keyboardeventkeycode to be removed from edge before the fix is made public it may be a good idea to not rely on keycode in this instance refer to line 103 which versions of react and which browser os are affected by this issue did this work in previous versions of react reactdom version 1620 potentially affects future versions of edge"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nstate change in td element\ndisplaying tabular rows when setting data in td element on state change it displays only the currently updated td element dataall the other ones go missing from screen when the same thing is placed within text box in each td element things work fine following is sample the code working code tr keyid td input td failing code tr keyid td thisstatepriceid td"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ngetting started docs are terrible\ni just came back to react after about a year or so of not using it and now the getting started docs are pretty much not helpful in the slightest all the docs are now is just links to other websites without any instructions on how to get a react project running i remember a year ago back in react 15 the docs had a step by step walkthrough for how to set up and get a project running from scratch and now they are just links to websites without react specific instructions what happened to the docs when did they become so useless there needs to be a step by step guide added back to the docs a guide that will get you from having nothing to running it in the browser instead of just links to other websites that dont have anything to do with react i remember back in react 15 you could run through the guide and have a hello world app running within 10 minutes no problems i have been trying to figure it out with these new docs for over an hour now and still 0 luck getting this running the instructions used to actually be instructions basically saying install this then that then run this command in terminal then do this and so on the docs now just say well you can use this then has a link to a site that has nothing to do with react there is not even any sort of instruction on the react website on what to do with that just the link without any context around it can these docs please be reverted to the old versions or actually create a proper getting started page to get you from nothing to running"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nconcating react with other resources\nhi i want to use many libraries and frameworks in my project can i concat react with other framework like angular vue ember"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncant edit the wiki\nhello i cant edit the wiki to add my website to the list there is editing disabled"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ntypeerror cannot read property state of undefined with createreactclass\ni am currently attempting to create a button which is red with the text yes that when you click on it the button changes to a green color with the text confirm before the final stage in which an action takes place where i am currently at is defining buttoncolor as a state which changes on the click of the button the initial color should be fd8f83 and the final color after the click should be a4d87c however i am currently getting the error typeerror cannot read property state of undefined pointing to the stylebackgroundcolor thisstatebuttoncolor line whenever the code is compiled on the webpage defining initial state and behavior on click getinitialstate function return buttoncolor fd8f83 handleclickcolor thissetstate buttoncolor color code inside table in render td button stylebackgroundcolor thisstatebuttoncolor yes button td does anyone have any ideas why this is i am brand new to react so i apologize if its obvious i also learned react using createclass so ive been trying to piece together how to make this work with the new createreactclass package any advice is greatly appreciated react 1620 chrome version 6303239132 official build 64bit"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nsluggish scrolling when rendering table with large dataset in react\nso im creating an application with realtime streaming data in a table using react v1611 the number of rows shown at a time can be rather large 400 rows and when those situations occur the scrolling behavior on browsers desktop mobile really takes a hit and staggers when attempting to browse the content has anybody experienced this kind of scrolling behavior when rendering large data sets in a table im expecting react to be able to efficiently drawredraw these elements with ease but that doesnt appear to be the case i tried using jsfiddle to recreate the scenario but did not have much success"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\nforceupdate recalls all ref callbacks\ndo you want to request a feature or report a bug bug maybe what is the current behavior on calling forceupdate ref callbacks called again so doing forceupdate in ref callback makes infinite loop if the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via httpsjsfiddlenet or similar template for react 16 template for react 15 what is the expected behavior do not recall refs which versions of react and which browser os are affected by this issue did this work in previous versions of react react 1611 chrome 62"}, {"role": "assistant", "content": "question"}]}
{"messages": [{"role": "system", "content": "GitHub Issue Report Classifier"}, {"role": "user", "content": "Classify, IN ONLY 1 WORD, the following GitHub issue as 'feature', 'bug', or 'question' based on its title and body:\ncant access discuss react\ni know this is not related to react directly but didnt know where to turn to am i the only one who cant accesslogin to discussreactjsorg for quite some time already i get error this page isn’t working discussreactjsorg is currently unable to handle this request http error 500 and sometimes when i retry this error sorry there was an error authorizing your account perhaps you did not approve authorization"}, {"role": "assistant", "content": "question"}]}
